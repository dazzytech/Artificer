Word,Count
/,2072
the,832
=,657
to,547
</summary>,476
<summary>,476
{,473
},462
for,326
if,324
//,291
and,273
<param,256
a,245
of,243
is,233
in,225
public,202
ship,197
new,184
player,152
object,145
list,139
this,134
///,127
component,114
void,110
-,109
we,95
on,92
that,91
null),91
from,81
i,80
==,79
+,77
foreach,77
lobby,75
station,75
Create,72
components,70
as,66
<,66
*,64
within,62
be,62
with,61
Artificer,61
data,60
when,60
then,60
will,59
not,59
each,58
spawn,58
i++),58
all,56
it,56
game,55
!=,53
private,52
our,51
position,51
Set,50
objects,50
+=,50
create,50
team,49
now,48
else,48
have,47
server,47
are,47
Use,47
attributes,46
called,46
Add,46
Update,45
an,45
ID,45
return,45
by,44
Vector2,43
HUD,43
int,42
item,41
initialization,41
(;,40
piece,40
0;,39
set,39
has,39
distance,37
event,37
through,36
true;,35
add,34
false;,34
state,33
break;,33
only,32
Assign,32
Ship,31
reference,31
or,31
float,31
GameObject,31
<returns></returns>,31
currently,30
assign,30
<=,30
faction,30
out,30
case,30
ships,29
here,29
connected,29
protected,29
hit,29
If,29
client,29
Build,29
once,29
display,29
aField._symbols[i],29
<returns>The,28
frame,28
UI,28
segment,28
current,28
per,27
Store,27
socket,27
transform,26
key,26
button,26
return;,26
one,26
static,26
message,26
>=,25
panel,25
build,25
destroyed,25
null;,25
text,25
function,25
between,25
sockets,24
while,24
element,24
other,24
Called,24
already,24
controller,24
obj,23
store,23
update,23
target,23
space,23
can,22
-=,22
When,22
process,22
info,22
Adds,21
time,21
mission,21
Test,21
using,21
listener,21
\50f,\,21
need,21
local,21
,20
so,20
Builds,20
you,20
based,20
track,19
any,19
events,19
Player,19
Vector3,19
Find,19
amount,19
&&,19
change,19
exists,19
check,19
type,19
texture,19
bool,19
(MissionData,19
at,19
first,19
get,18
damage,18
use,18
enemy,18
clear,18
make,18
camera,18
mat,18
Initialize,18
Sets,18
material,18
e.g,18
them,18
null,18
outOfRange,18
parent,18
prefab,17
impact,17
around,17
storage,17
rect,17
mouse,17
existing,17
created,17
This,17
string,17
loop,17
(int,17
window,17
Get,17
been,17
just,17
disable,16
Check,16
functions,16
head,16
no,16
variables,16
class,16
pending,16
elements,16
want,16
behaviour,16
selected,16
items,16
asteroid,16
into,16
point,16
0),16
two,15
parameters,15
projectile,15
generator,15
test,15
up,15
should,15
stored,15
viewer,15
find,15
Creates,15
follow,15
stations,15
random,15
wreckage,15
go,15
integrity,14
assigned,14
range,14
start,14
friendly,14
information,14
was,14
next,14
vars,14
collider,14
angle,14
retrieve,14
bullet,14
remove,14
Spawns,13
spawner,13
base,13
Remove,13
left,13
Returns,13
direction,13
self,13
enemies,13
value,13
points,13
used,13
pos,13
eject,12
targets,12
emergency,12
right,12
Clear,12
Spawn,12
combat,12
destroy,12
(MaterialData,12
For,11
wData._symbols[i],11
host,11
requirements,11
(GameObject,11
List,11
spawns,11
collision,11
successfully,11
Retreive,11
_controller.RewardText.text,11
do,11
Stores,11
\200f,\,11
stores,11
controls,11
patrol,11
pieces,11
active,11
comp,11
instance,11
Server,11
Defined,10
empty,10
possible,10
Station,10
network,10
added,10
child,10
manager,10
location,10
visual,10
\"\\,10
FSM,10
debris,10
attack,10
GUI,10
callback,10
Finds,10
50f))));,10
running,10
Display,10
pass,10
continue;,10
\50f),\,10
The,10
move,10
middle,10
Retrieve,10
being,10
returns,10
interaction,10
corresponding,10
\Random.Range(-10,\,10
prefabs,10
load,9
materials,9
min,9
detect,9
Transform,9
\GameObject.Find("\_gui"\)\,9
its,9
IDs,9
group,9
(!outOfRange),9
away,9
tracking,9
colour,9
adds,9
too,9
available,9
Pass,9
steam,9
successful,9
creation,9
Steam,9
input,9
Component,9
under,9
Object,9
same,9
max,9
show,9
name,9
>,9
m,9
hide,8
resolution,8
FriendlySpawn.y,8
Raises,8
delay,8
popup,8
_newShip,8
before,8
Send,8
see,8
\position,\,8
style,8
filter,8
\name="\hit"\></param>\,8
players,8
We,8
also,8
Start,8
stop,8
Only,8
8);,8
Target;,8
screen,8
together,8
center,8
fsm,8
Game,8
enable,8
Random.Range(FriendlySpawn.y,8
Time.deltaTime;,8
Changed,8
MessageHUD.DisplayMessege(new,8
total,8
\0,0\,8
teams,8
count,8
which,8
every,8
functionality,8
Gets,8
retreive,8
canvas,8
closest,8
selection,8
Prefab,8
coroutine,8
Lobby,8
(Random.Range(FriendlySpawn.x,8
id,8
correct,8
mode,8
ShipData,8
system,8
FriendlySpawn.x,8
different,8
Base,8
nothing,8
sure,8
container,8
\[Random.Range(0,\,7
work,7
float>();,7
SHIP,7
displays,7
loops,7
Panel,7
clients,7
types,7
<c>true</c>,7
drag,7
Vector2();,7
sent,7
music,7
switch,7
planet,7
status,7
enabled,7
width,7
patrols,7
init,7
pick,7
SteamManager,7
size,7
values,7
AND,7
Updates,7
activity,7
Data,7
step,7
color,7
First,7
trigger,7
List<Transform>,7
Generate,7
amt,7
Elements,7
ShipGenerator,7
image,7
but,7
Text,7
down,7
Begin,7
BaseShipComponent,7
listens,7
close,7
respawn,7
Displays,7
MaterialData,7
changes,7
responsible,7
Keep,7
defined,7
don't,6
virtual,6
List<Transform>();,6
warp,6
know,6
adding,6
\Random.Range(2,\,6
click,6
user,6
colliders,6
initialize,6
(string,6
\string.Format("\\,6
height,6
:,6
Pick,6
timer,6
single,6
List<FSM>();,6
\Follow.Count)],\,6
script,6
their,6
Waves,6
surrogate,6
\SendMessage("\AddUIPiece"\,\,6
yet,6
take,6
Contract,6
FriendlySpawn),6
_util.DraggedObj,6
far,6
facing,6
10,6
rewardText.text,6
WaveTimer,6
over,6
SpawnTimer,6
tracker,6
more,6
temp,6
SegmentObjectBehaviour.Destroyed,6
own,6
Points,6
result,6
spawned,6
level,6
index,6
after,6
functioning,6
GetSpawnList();,6
radius,6
fight,6
apply,6
world,6
Call,6
pressed,6
Return,6
\name="\playerID"\></param>\,6
Mission,6
place,6
(_ship,6
menu,6
_shipGen;,6
top,6
(FSM,6
bSC,6
nodes,6
activate,6
connection,6
Place,6
contract,6
certain,6
applies,6
us,6
however,6
parts,6
Parent,6
_ships,6
cause,6
options,6
cycle,6
selector,6
\{1}\n"\,\,6
seconds,6
\go.GetComponent<SpawnerFollowBehaviour>().SetFollow(Follow[Random.Range(0,\,6
5);,6
Takes,6
gui,6
units,6
break,6
Do,6
tag,6
failed,6
comps),6
\(Vector2.Distance(pos,\,6
pos));,6
\Vector2.Distance(pos,\,6
Apply,6
override,6
fade,6
keys,6
particles,6
settings,6
particle,5
100;,5
than,5
beam,5
100f,5
Vector3.up);,5
join,5
0);,5
attempt,5
requirement,5
builds,5
could,5
listen,5
See,5
List<MissionData>();,5
Random.Range(homeStation.y,5
SegmentObject,5
leave,5
\name="\pLobby"\></param>\,5
would,5
fire,5
Run,5
reach,5
Max),5
Both,5
ACTIONS,5
hud,5
exist,5
connect,5
tracked,5
Update(),5
ignore,5
must,5
wave,5
newTex;,5
Used,5
delegate,5
updates,5
200f));,5
Receives,5
sprite,5
NPC,5
param),5
string[],5
version,5
dont,5
given,5
send,5
messages,5
circle,5
_shipGen.GenerateShip,5
SendMessageOptions.DontRequireReceiver);,5
invisible,5
Faction,5
whether,5
Wave,5
cargo,5
(ShipData,5
default,5
SpriteRenderer,5
200f),5
(Random.Range(homeStation.x,5
_factionActivity);,5
NOT,5
constructor,5
bottom,5
Message,5
spawn.SpawnType,5
method,5
editor,5
cursor,5
access,5
_controller.ObjectivesText.text,5
call,5
\10),\,5
triggers,5
yield,5
were,5
transition,5
actually,5
_ship.Ship,5
specific,5
Fade,5
No,5
actual,5
inMats),5
homeStation.x,5
Texture2D,5
tab,5
1,5
passed,5
well,5
-1;,5
determine,5
error,5
m_controller.CurrentState,5
Refresh,5
lists,5
does,5
removed,5
detection,5
shield,5
Event,5
Loop,5
Because,5
upon,5
Handles,5
callbacks,5
appearance,5
group.Ships),5
Enemy,5
List<MissionData>,5
(_ships,5
segments,5
newSpawnPoint.tag,5
body,5
Vars,5
Change,5
float>,5
without,5
tex,5
\npc.SendMessage("\SetTransition"\,\,5
size;,5
ai,5
Name,5
10));,5
utility,5
future,5
/*,5
\200f),\,5
initializes,5
delta,5
directories,5
homeStation.y,5
[Command],4
\host,\,4
t,4
inform,4
\{0}"\,\,4
What,4
Data.Shared.Component,4
Sent,4
sec,4
Ended),4
double,4
\"\Co"\;\,4
THE,4
_util.ClearWeight();,4
Disengage();,4
BuildWave(WaveNumber,4
tests,4
subtract,4
Lists,4
info.amount;,4
Container,4
param,4
Clears,4
possibly,4
(Ships.Count,4
fSP,4
plasma,4
I,4
_type,4
uses,4
MATERIAL,4
output,4
List<SocketBehaviour>,4
\"\Al"\;\,4
about,4
normal,4
\name="\newComp"\>New\,4
second,4
Random.Range(missionStation.y,4
changed,4
listeners,4
Ship;,4
\10,\,4
{0},4
making,4
retrive,4
\"\Zn"\;\,4
OnDisable(),4
List<ShipData>,4
FriendlySpawner,4
puts,4
BaseSpawnMaxDistance);,4
Listens,4
highlight,4
works,4
LB,4
newSpawnPoint.AddComponent<SpawnerFollowBehaviour>();,4
leaves,4
ShipDestroyed;,4
_storedShips,4
prompt,4
newShip,4
raider,4
Central,4
control,4
Initializes,4
\name="\componentList"\></param>\,4
Segment,4
contract),4
temp;,4
marker,4
OnlineState.LobbyList;,4
rewards,4
\GameObject.FindGameObjectsWithTag("\FriendlySpawn"\))\,4
missionStation.x,4
isnt,4
\Random.Range(4,\,4
Points.Count)],4
these,4
SegmentObjectBehaviour,4
calculate,4
lower,4
WorldToViewPortPoint,4
\"\Sn"\;\,4
spawn.Trigger();,4
either,4
Controller,4
80;,4
(!Selected),4
treats,4
keep,4
Method,4
ContractData,4
GET,4
number,4
external,4
segmentobject,4
fSP;,4
end,4
none,4
EnemySpawn,4
Button,4
entry,4
stops,4
\"\Cu"\;\,4
\screen,\,4
percentage,4
\name="\component"\>Component.</param>\,4
0f;,4
main,4
A,4
disabled,4
mission.Title)));,4
something,4
if(GameManager.GetPlayer.Cargo,4
aSP,4
USED,4
avoid,4
convert,4
_req.StoreExisting,4
hidden,4
string[100];,4
_ship.Head,4
pSP;,4
GameManager.GetPlayer.Cargo,4
\Dictionary<string,\,4
||,4
ShipGen;,4
\BaseSpawnMaxDistance,\,4
ShipExternalController.ShipDestroyed,4
chance,4
SteamMatchmaking.SetLobbyData,4
\name="\position"\>Position.</param>\,4
deleted,4
eSP;,4
EnemySpawner,4
GameObject();,4
(Random.Range(missionStation.x,4
value;},4
foreach(MaterialData,4
\MsgParam("\bold"\,\,4
ready,4
otherwise.</returns>,4
50;,4
WaveNumber,4
\(m_att.Lobby,\,4
later,4
_base.Contract,4
SecondaryTracker),4
\Vector3(.5f,\,4
previous,4
THAT,4
missionStation.y,4
\this,\,4
textures,4
corner,4
messege,4
inst,4
patrol.SetController,4
\name="\ID"\></param>\,4
Destroy(child.gameObject);,4
1;,4
1);,4
manages,4
refresh,4
song,4
_attr.engineMotion,4
lobbies,4
Friendly,4
if(m,4
Release,4
\Random.Range(5,\,4
buttons,4
there,4
\name="\m"\></param>\,4
col,4
BY,4
---------------------,4
until,4
via,4
maybe,4
icon,4
map,4
\"\"\;\,4
pSP,4
\"\Ni"\;\,4
Collision,4
required,4
targeter,4
whereas,4
\name="\position"\></param>\,4
group),4
controlled,4
side,4
finished,4
<c>false</c>,4
_listener);,4
t.Targets.Add(Ships[Ships.Count-1]);,4
missionStation),4
\name="\direction"\>Direction.</param>\,4
Threat,4
area,4
shared,4
newShip),4
bSC;,4
paths,4
todo:,4
1f);,4
specified,4
homeStation),4
\GameObject.FindGameObjectsWithTag("\EnemySpawn"\))\,4
0,4
off,4
\"\Fe"\;\,4
may,4
owned,4
aSP;,4
0.5,4
always,4
amt;,4
scene,4
across,4
PrimaryTracker),4
(group.Ships.Count,4
\System.Collections.Generic.Dictionary<MaterialData,\,4
//private,4
docked,4
still,4
another,4
\"\Pb"\;\,4
2,4
released,4
visible,4
loading,4
data),4
Axis,4
states,4
Components,4
-1),4
where,4
spawn.ShipPending,4
comp.</param>,4
eSP,4
70;,4
original,4
vector,4
\<returns><c>true</c>,\,4
Where,4
State,4
\name="\trans"\>Trans.</param>\,3
\"\UAN"\;\,3
maximum,3
GameParameters,3
\name="\piece"\></param>\,3
transforms,3
THIS,3
fading,3
playership,3
fix,3
Popup,3
(Target,3
found,3
colours,3
ResetShipData();,3
layer,3
killed,3
tasks,3
Objects,3
incase,3
renderer,3
order,3
processes,3
contract.PrimaryMissions),3
\0f,\,3
1f,3
mat.Density),3
[mat],3
render,3
\name="\conn"\></param>\,3
owner,3
rotation,3
starts,3
_newShip.name,3
\"\Au"\;\,3
Not,3
satellites,3
\ship,\,3
targetting,3
reinforcements,3
Targeter,3
live,3
&,3
format,3
Raider,3
shipdata,3
netID,3
\GameObject.FindGameObjectsWithTag("\TeamSpawner"\))\,3
newly,3
Quick,3
Load,3
Keeps,3
\name="\comps"\></param>\,3
TEAM,3
etc,3
deadFSMs,3
descriptive,3
\name="\data"\></param>\,3
\spawns.Add(BuildSpawn("\asteroidSpawn"\,\,3
ship.</returns>,3
refence,3
spawners,3
difference.</returns>,3
guard,3
memory,3
way,3
forward,3
formatter,3
save,3
initial,3
info.amount);,3
generate,3
depending,3
Socket,3
group.Ships.Remove(fsm);,3
\spawns.Add(BuildSpawn("\enemySpawn"\,\,3
spawning,3
20);,3
synced,3
Each,3
directory,3
Vector2.zero;,3
till,3
collection,3
otherwise,3
Max,3
So,3
\UAN,\,3
Applys,3
atts,3
due,3
FUNCTIONS,3
m_trackTargets,3
begin,3
-1,3
(fsm,3
Iterate,3
();,3
GO,3
path,3
comSplit,3
front,3
30;,3
construction,3
\1f,\,3
interface,3
patros,3
if(mat,3
contract.OptionalMissions),3
remote,3
FactionTemplate,3
ShipItemPrefab,3
program,3
activated,3
(Transform,3
invite,3
Delete,3
working,3
keeps,3
14;,3
col.size,3
provided,3
copper,3
Starts,3
(newShip.gameObject.GetComponent<ShipMessegeController>());,3
GameManager.GetPlayer.ShipList),3
callback.</param>,3
1000),3
_util.UpdateWeight();,3
ship),3
1.0f,3
lobbylist,3
3,3
Panel.color,3
back,3
mat.Name);,3
OnStateChanged;,3
0.309f);,3
\name="\dest"\>Destination.</param>\,3
10f,3
_waitTimeGuard,3
(_newShip.gameObject.GetComponent<ShipMessegeController>());,3
tooclose,3
component),3
tex;,3
shipItem,3
DOMINANTLY,3
(true),3
Detect,3
Reset,3
less,3
moves,3
snap,3
setting,3
\name="\pCallback"\>P\,3
calls,3
deadFSMs),3
Determine,3
schematics,3
\mat.Density)*0.001).ToString("\F1"\)+"\Ton(m)"\;\,3
spawn.Target,3
both,3
bounds,3
(),3
(30,3
pointer,3
_renderer.sortingOrder,3
background,3
AsteroidSpawner,3
again,3
b,3
configuration,3
dependant,3
auto,3
Reference,3
changing,3
\100f,\,3
15,3
50/50,3
scale,3
Give,3
Based,3
20),3
outside,3
GameObject.Destroy(go);,3
\pos,\,3
player's,3
Attack,3
checking,3
multiple,3
fullscreen,3
ShipDestroyed(DestroyDespatch,3
vicinity,3
35;,3
proximity,3
physical,3
central,3
regarding,3
col.isTrigger,3
7;,3
\name="\Ship"\></param>\,3
kick,3
tin,3
appear,3
\Vector2(Random.Range(-1f,\,3
comp.Split('/');,3
_waitTimePatrol,3
\name="\netID"\></param>\,3
initialized,3
match,3
faded,3
IO,3
SERVER,3
Attributes,3
Activity,3
\0,\,3
toggle,3
towards,3
{0}:,3
Trigger(),3
element.</returns>,3
_currentShip,3
Ensure,3
deadFSMs.Add(fsm);,3
transfer,3
List<FSM>,3
instead,3
SpawnDelay;,3
failure.</param>,3
Ended.Add(mission);,3
executed,3
\Vector2(2500f,\,3
newTex,3
iterate,3
Turn,3
comSplit[1]);,3
(Input.GetKeyDown(_attr.TriggerKey,3
Group,3
RawImage,3
bar,3
\_newShip,\,3
onto,3
Next,3
\mat.Density).ToString("\F1"\)+"\KG"\;\,3
\name="\ship"\>Ship.</param>\,3
run,3
OF,3
invokes,3
many,3
Runs,3
copy,3
saved,3
\name="\bIOFailure"\>If\,3
\name="\import"\>Import.</param>\,3
haven't,3
play,3
coordinates,3
45;,3
\name="\range"\>Range.</param>\,3
GameManager.GUI.DisplayMessege(new,3
updating,3
50f,3
Ships,3
Toggle,3
red,3
SteamAPI,3
\amt,\,3
sync,3
\spawns.Add(BuildSpawn("\playerSpawn"\,\,3
recursively,3
30,3
\"\You\,3
creates,3
\"\\nComponents:\n"\;\,3
IN,3
SET,3
header,3
\1f),\,3
arc,3
said,3
minimum,3
ListBox,3
Position,3
folder,3
removing,3
ContractType.BaseDefense:,3
Make,3
foreach(string,3
ContractStatus,3
Games,3
\name="\shipData"\></param>\,3
value;,3
notify,3
dead,3
(_ship.Head,3
ElementLibrary.ReturnElement(info.material);,3
generating,3
Inventory.AddMatsToList(_req.Requirements);,3
alive,3
Contains,3
\_Materials.Add(mat,\,3
template,3
lead,3
Viewer,3
matPos,3
foreach(MissionData,3
OnEnable(),3
graveyard,3
label,3
difference,3
Show,3
Retreives,3
fixed,3
SHIPS,3
(_collectedMaterials,3
building,3
\comSplit[0],\,3
\Spawn,\,3
checks,3
BoxCollider2D,3
determines,3
\Dictionary<MaterialData,\,3
ContractType.Escort:,3
tabs,3
if(item.MatIs(mat)),3
reaches,3
Unique,3
\spawns.Add(BuildSpawn("\friendlySpawn"\,\,3
ship.IconTex,3
fired,3
_waitTimeAttack,3
some,3
aField._symbols,3
\"\Ag"\;\,3
Follow,3
\Random.Range(-1f,\,3
interactive,3
xp,3
weapon,3
itemExists,3
counter,3
filters,3
unending,3
Generates,3
including,3
serialize,3
Right,3
male,3
panels,3
GameManager.GetPlayer.Cargo[mat],3
doesnt,3
placed,3
TODO:,3
countdown,3
search,3
stats,3
numeric,3
station),3
enemyspawns,2
button.</returns>,2
Some,2
scndObj,2
Hit,2
if(current,2
\Vector2(2500,\,2
mats.Keys),2
NetworkManager.singleton.networkAddress,2
homeMat,2
\100f),\,2
instances,2
targeting,2
boundaries,2
Trigger();,2
si,2
if(_requirements,2
\0.002f,\,2
documentation,2
0.1f;,2
_stationShipRespawn,2
important,2
Instantiate(ShipItemPrefab);,2
newPos,2
aData._symbols;,2
state´s,2
contract.Locked,2
mission.UpdateStatus();,2
Material,2
Delegate,2
Vector3(tex.width,2
Entry,2
inMat),2
Implement,2
gap,2
Compressed,2
\name="\pos"\>Position.</param>\,2
behaviour.PopulateWeighted(prospect);,2
User,2
In,2
enough,2
removal,2
Select,2
newShip.name,2
READ,2
pieceDensity,2
Rigidbody2D,2
Break,2
\string.Format("\Exp:{0}\n"\,\,2
matchmaker,2
(Waves,2
(playerShip.transform.position.y,2
newSpawnPoint.AddComponent<AsteroidSpawner>();,2
act,2
OnDestroy(),2
having,2
option,2
\it,\,2
if(MissionFailed.activeSelf),2
_maxWaitTimeAttack,2
EXPEND,2
ERROR,2
variable,2
Target,2
Editor,2
MissionPassed.SetActive(false);,2
Resolution,2
Lobby_,2
transform.</param>,2
Destroy(this.gameObject);,2
\Vector3(1f,\,2
\name="\newComponent"\>New\,2
HAVE,2
shop,2
numerically,2
overlay,2
targetStation,2
grouping,2
Redraw,2
CollectableRockBehaviour,2
\active,\,2
rock.AddComponent<CollectableRockBehaviour>();,2
Reimburse,2
Sends,2
((mats[mat],2
.5f);,2
listbox,2
\(ShipPending,\,2
ShipImage.transform.localScale,2
position.x,2
Y,2
Vector3();,2
pause,2
disp.transform.localScale,2
\MsgParam("\md-yellow"\,\,2
push,2
component.</returns>,2
\name="\a_data"\>ship\,2
manipulate,2
comps.Add(comp);,2
Will,2
fades,2
Wave.Ships,2
After,2
if(ShipRespawn.activeSelf),2
\object,\,2
POPULATE,2
87;,2
SpawnPatrolShip(PatrolGroup,2
Ships.Remove(param.Self);,2
file,2
audio,2
configurations,2
spawns),2
cant,2
rotor,2
Populates,2
if(newTex,2
tha,2
group.Ships.Add(,2
EscortMission;,2
that's,2
joining,2
Points;,2
statObj.GetComponent<StationBehaviour>();,2
(GameManager.GetPlayer,2
deletion,2
threat,2
\name="\segment"\>Segment.</param>\,2
Cursor,2
position;,2
CycleCompletion,2
GetSpawnList(),2
such,2
\theory,\,2
_spawn.SpawnGuardShip(group.Station));,2
\"\Pt"\;\,2
World,2
spawn.Engage();,2
foot,2
0f),2
ended,2
Currently,2
_newShip.transform;,2
(contract.MissionSpecific)),2
reimburse,2
enables,2
AddShip(ShipData,2
_spawnGen;,2
gets,2
containig,2
chat,2
SpawnShip(false);,2
Skip,2
station;,2
connecting,2
180f;,2
assigning,2
{return,2
\"\up"\;\,2
\{"\ships\,2
markers,2
wave;,2
Manager,2
FOR,2
internal,2
ShipMessageController.OnShipDestroyed,2
_maxWaitTimeStation,2
\name="\parentID"\></param>\,2
Ships.Add(newShip);,2
rock.AddComponent<Rigidbody2D>();,2
(Socket,2
individual,2
damaged,2
(param.Contract.CType,2
(current,2
Checks,2
\150f,\,2
if(!_Materials.ContainsKey(mat)),2
Process,2
spawnData,2
CreateListboxItem(mat).SetPlayerAmount(current,2
recolor,2
ATTACK,2
AddShip(Transform,2
(tex,2
20,2
(group.Lead.position.x,2
\exist!"\);\,2
ShipContainer();,2
Reduce,2
1.0,2
inMat,2
scrolling,2
picked,2
\"\\n"\;\,2
group.Ships,2
female,2
collided,2
becomes,2
objs,2
Leader,2
health,2
encapsulated,2
old,2
100f),2
OnlineState,2
contacts,2
recieve,2
EnemySpawner;,2
Closes,2
Spawner,2
\name="\index"\>Index.</param>\,2
shows,2
Under,2
Destroyed,2
hiding,2
socketdata,2
BulkSpawn(),2
previously,2
MAIN,2
trackers,2
if(!(GameManager.GetPlayer.Cargo[mat],2
Transition.GoAround);,2
sends,2
deserialize,2
\Random.Range(3,\,2
TargetMission;,2
shielded,2
retry,2
Type,2
homeMat;,2
edges,2
library,2
Can't,2
ShipName.text,2
transform.localPosition,2
box,2
\CreateListboxItem(comp,\,2
shake,2
35f);,2
_collectedMaterials[matPos],2
randomly,2
(pieceDensity,2
0.2f;,2
arent,2
regenerate,2
\[2],\,2
Items,2
Shake,2
_util.ReturnNextAvailableName();,2
initialise,2
_ship,2
alignment,2
related,2
rock.layer,2
EVENTS,2
xml,2
connector,2
numbers,2
SegmentObject();,2
Any,2
receive,2
Icon.color,2
automatic,2
SetContract:,2
SIDE,2
ENOUGH,2
m_controller.OnStateChanged,2
rock.transform.position,2
\mats.Add(mat,\,2
Random.Range(EnemySpawn.y,2
RockDestroyed;,2
(_att.Contract,2
group.Lead.position.y,2
TEST,2
_timer,2
newShip;,2
reward,2
firing,2
BaseSpawnMinDistance),2
gamemanager,2
PS,2
intialized,2
member,2
De-assign,2
FriendlySpawner;,2
include:,2
FX,2
\name="\element"\>Element.</param>\,2
pass</param>,2
Waves;,2
Color,2
\spawn,\,2
SpawnShip(true);,2
if(!comps.Contains(comp)),2
scripts,2
StandardColor;,2
dies,2
following,2
//Seems,2
Requirements[mat],2
B,2
storing,2
\name="\key"\>Key.</param>\,2
nearby,2
takes,2
Has,2
launch,2
X,2
(_targeterHUD.gameObject.activeSelf,2
shipName),2
externally,2
connections,2
temp.Name,2
Targets,2
perform,2
StationController.OnShipDestroyed,2
GameManager.GetPlayer.Cargo;,2
Rect,2
object's,2
ContractType.Attrition:,2
100f));,2
EMPTY,2
socket.</param>,2
Applies,2
Generator,2
6);,2
patrol;,2
rock.AddComponent<BoxCollider2D>();,2
Switchs,2
behaviour.prospect,2
default:,2
rockSprite,2
they,2
state.</param>,2
Arranges,2
OnDestroy,2
hits,2
decals,2
Populate,2
small,2
8;,2
\name="\res"\>Res.</param>\,2
RemoveObject;,2
AsteroidGenerator,2
wave),2
started,2
showing,2
AS.Engage();,2
EnemySpawn.y,2
Key,2
shutdown,2
_MatListItems),2
turns,2
levelReqs,2
ES,2
Allow,2
\damage,\,2
Destroyed;,2
half,2
(SpawnTimer,2
false,2
ONLY,2
\"\,\,2
Damage,2
obj),2
targeters,2
steam_appid.txt,2
Failed:,2
ElementLibrary.ReturnElement(matName);,2
enters,2
rb.gravityScale,2
Wave.Boss;,2
ShipData();,2
enum,2
temp.x,2
TargetMission,2
planets,2
\name="\message"\></param>\,2
((DefendMission)mission).Station,2
BuildWave(int,2
List<SpawnerBehaviour>();,2
agaisnt,2
_ship.Components),2
assigns,2
(GuardGroup,2
_collectedMaterials.IndexOf(inMat);,2
needing,2
peice,2
targetStation),2
\si.SetShipData(ship,\,2
\string.Format("\Primary\,2
ship.IconTex;,2
combined,2
\name="\inMat"\></param>\,2
behavior,2
_asteroidGen;,2
An,2
ShipImage.texture,2
dictionary,2
taking,2
exiting,2
Responsible,2
face,2
Colourize,2
50);,2
As,2
contains,2
alerting,2
Select.interactable,2
Panels,2
TargetMission),2
group.Lead),2
Point,2
\[0],\,2
\name="\isHead"\>If\,2
this.transform;,2
shaking,2
muzzle,2
foreach(FSM,2
DeletePiece(_util.DraggedObj);,2
VSync,2
WaveNumber;,2
Relays,2
SelfPanel.color,2
if(value,2
FS.SpawnDelay,2
seperate,2
array,2
\string[1]{"\RaiderNode"\});\,2
DefendMission),2
Texture2D;,2
DONT,2
_nodeGen;,2
\string.Format("\{0}:XP"\,\,2
displaying,2
builder,2
three,2
along,2
\"\Enemy"\)\,2
(temp,2
7777,2
Max;,2
Deletes,2
automated,2
Other,2
\found,\,2
extend,2
Local,2
swap,2
SpawnGuardShip(StationData,2
EllipsoidParticleEmitter,2
suitable,2
\name="\panel"\></param>\,2
everyone,2
(component,2
_attr.maxSpeed),2
how,2
0.002f);,2
_factionActivity;,2
Given,2
raise,2
\2500f),\,2
ShipGen.GenerateShip,2
ArrayList,2
belongs,2
isn't,2
designated,2
(mats[mat],2
newSpawnPoint.AddComponent<EnemySpawner>();,2
statObj.transform;,2
if(mission,2
\Resources.Load("\Space/Ships/Icon/"\\,2
upwards,2
transform.position.y,2
gameobject,2
Prompt,2
tex.height,2
_attr.engineVelocity,2
located,2
bulk),2
shipItem.GetComponent<ShipItemPrefab>();,2
Waves.Count),2
\name="\controller"\></param>\,2
Wave.Ships.Length)];,2
_collectedMaterials[matPos];,2
if(ship.IconTex,2
TO,2
printed,2
\.5f,\,2
List<ShipData>();,2
destroyed),2
Item,2
affected,2
(wave,2
turning,2
labeling,2
ForceMode2D.Force);,2
unlocked,2
func,2
FriendlySpawn,2
NodeGenerator,2
\name="\normalValue"\></param>\,2
\lobbies,\,2
highlighted,2
AI,2
rpc,2
hardcoded,2
ALL,2
shipItem.transform.SetParent(ShipGrid.transform);,2
ui,2
0.0f),2
port,2
Analytics,2
\Debug.Log("\GameManager\,2
TrackerHUD,2
WITHIN,2
_req.Requirements.Keys),2
activation,2
m_att.Lobby,2
Now,2
friends,2
Disable,2
means,2
\game,\,2
owns,2
(transform.position.x,2
EnemySpawn.x,2
if(Requirements.ContainsKey(mat)),2
baseShip,2
enter,2
\if(Vector3.Distance(position,\,2
(MaterialListItem,2
Assigns,2
explode,2
Wave.Boss,2
if(MissionPassed.activeSelf),2
//obj.Create(300f);,2
scroller,2
Events,2
_curStationGuard),2
Missions,2
spawnObjs,2
Last,2
Ships;,2
link,2
BUILD,2
Transfer,2
showed,2
constructs,2
WE,2
relations,2
full,2
Copy,2
period,2
You,2
selecting,2
aligned,2
List<SpawnerBehaviour>,2
\name="\t"\></param>\,2
success,2
rock.AddComponent<SpriteRenderer>();,2
_requirements;,2
able,2
infinite,2
if(mats.ContainsKey(mat)),2
pair,2
_maxWaitTimePatrol,2
External,2
Play,2
Control,2
homeMat.Amount,2
starting,2
[WaveNumber].waveTime;,2
wrecked,2
=>,2
rock.transform.localScale,2
press,2
Contract;,2
ES.SpawnDelay,2
handles,2
(mat,2
IEnumerator,2
task,2
Initialize(GameBaseAttributes,2
_util.SetShip(_ship);,2
\name="\inMats"\></param>\,2
sort,2
Stop,2
StationData,2
ship's,2
picker,2
\"\EnemySpawn"\;\,2
mission.Begin();,2
resolutions,2
Removes,2
links,2
(Ships.Contains(param.Self)),2
\"\\nOptional\,2
WaveTimer;,2
vector2,2
attach,2
shot,2
replace,2
angles,2
rb,2
\Random.Range(15f,\,2
ELEMENTS,2
\"\asteroid"\;\,2
(Wave.Boss,2
BulkSpawn();,2
SpawnAttackShip(AttackGroup,2
Sendmsg,2
CreateNewShip(),2
(Random.Range(EnemySpawn.x,2
ProcessStationDestroyed;,2
ShipPending;,2
allow,2
ratio,2
come,2
HighlightColor;,2
never,2
Engages,2
longer,2
head.</param>,2
(playerShip.transform.position.x,2
foreach(Transform,2
\name="\componentTransform"\>Component\,2
\name="\components"\></param>\,2
AS.SpawnDelay,2
parentTransform),2
segment.</returns>,2
Opens,2
PlayerSpawner,2
if(Follow.Count,2
manually,2
Attached,2
prev,2
MissionFailed.SetActive(false);,2
manage,2
\name="\val"\></param>\,2
CLIENT,2
(matPos,2
\"\station"\;\,2
Icon,2
Completed:,2
\name="\camPos"\></param>\,2
timer;,2
(mission.Success),2
\name="\m"\>M.</param>\,2
Dispatches,2
(for,2
mats[mat],2
Steamworks.NET,2
\string.Format("\Optional\,2
Have,2
\ship.Name,\,2
makes,2
relation,2
\name="\ID"\>I.</param>\,2
CycleFailure,2
(bulk),2
Calculate,2
breaking,2
hitdata,2
\name="\dead"\></param>\,2
rockSprite.sprite,2
ShipRespawn.SetActive(false);,2
DATA,2
inventory,2
WaveData,2
visiblity,2
95;,2
begins,2
position.y,2
actions,2
jump,2
mission.StationEntered(ship);,2
SpawnDelay,2
EnemySpawn),2
EscortMission),2
universe,2
references,2
sound,2
reenable,2
SpawnShip(bool,2
disp.transform.localPosition,2
\(Vector2.Distance(FriendlySpawn,\,2
standard,2
cleared,2
untitled,2
extract,2
Prefabs,2
STORES,2
true,2
code,2
\MsgParam("\sm-green"\,\,2
type),2
interact,2
arrow,2
Wave;,2
CREATE,2
(group.Lead,2
AIAGENT,2
Build.interactable,2
trailing,2
\name="\comp"\>Comp.</param>\,2
List<WaveData>,2
accessing,2
Initialized,2
m_attributes.fInfo,2
managing,2
npc,2
component.</param>,2
if((mats[mat],2
inspector,2
ProcessShipDestroyed;,2
emitter;,2
stationHUD,2
newSpawnPoint.AddComponent<FriendlySpawner>();,2
ContractType.Escort),2
last,2
win,2
calling,2
RAIDERS,2
omitting,2
patrol.SetFaction(_faction,2
dialog,2
[mat]);,2
shipIndex,2
\newShip,\,2
Assuming,2
\name="\param"\>Parameter.</param>\,2
places,2
\Vector3(0f,\,2
\name="\state"\>State.</param>\,2
latest,2
ContractLibrary.ReturnContract(0);,2
mission.AddMaterial(newMat);,2
CurrentStored,2
origin,2
fields,2
reinvoke,2
anything,2
FS,2
mission.AddShipKilled(destroyed);,2
Move,2
(mission.Failure),2
temp.y,2
transform.position;,2
needed,2
current.Keys),2
duplicate,2
identify,2
minimal,2
\1000f,\,2
made,2
2500);,2
xp);,2
group.Lead,2
\SendMessage("\UpdateShipList"\);\,2
effect,2
handle,2
patrol.SetAlignment();,2
micro,2
\"\FriendlySpawn"\;\,2
if(destroyed.AlignmentLabel,2
AS,2
SpawnPointGenerator,2
EscortMission,2
[WaveNumber].waveLimit;,2
[WaveNumber];,2
CARGO,2
0f);,2
Steamworks,2
\name="\delay"\></param>\,2
dispatches,2
Points.Clear();,2
_Scroller.transform),2
\name="\fsmState"\>Fsm\,2
Awake(),2
velocity,2
death,2
Formatters,2
if(!GameManager.GetPlayer.Cargo.ContainsKey(mat)),2
\Vector2.Distance(EnemySpawn,\,2
understood,2
Loops,2
it's,2
4,2
try,2
AsteroidData,2
rock,2
accessors,2
\name="\param"\></param>\,2
\rb.AddForce(Random.insideUnitCircle*20f,\,2
management,2
iterations,2
1f)));,2
Import,2
form,2
typeof(Texture2D)),2
volume,2
scroll,2
\"\Materials:\n"\;\,2
foreach(ShipData,2
galaxies,2
gives,2
compare,2
(_newShip,2
Travel;,2
_factionGuards),2
heads,2
(WaveTimer,2
linked,2
\name="\scale"\></param>\,2
att);,2
Safe,2
_requirements,2
unit,1
SetShipRespawnCounter(float,1
https://partner.steamgames.com/documentation/getting_started,1
\_nodeGen.GenerateNodes(5,\,1
_minWaitTimePatrol),1
wont,1
Performs,1
GO.GetComponent<ComponentListener>();,1
_spawnGen.GenerateSpawn(spawn);,1
List<ShipData>(ShipLibrary.GetAll());,1
spawnpoint,1
\_messege.ReleaseKey(Control_Config.GetKey("\moveUp"\,\,1
\name="\index"\></param>\,1
x.Name,1
.1,1
RELATED,1
_mission,1
Contract.PrimaryMissions),1
newStation;,1
SaveShip(),1
(GameManager.GetPlayer.Ship.Equals(_ship.Ship)),1
Instantiate(_att.ShipItemPrefab);,1
Problems,1
_storedShips;,1
\name="\segObj"\></param>\,1
//(destroyed);,1
TARGETING,1
\name="\input"\>Input.</param>\,1
Processes,1
replay,1
DialogType.YESNOTIMER),1
/*int,1
\"\Failed"\\,1
CycleEnemySpawn(),1
mission),1
galaxy,1
\LoadConnectedObjects(bSC,\,1
ascending,1
minus,1
mtext.color,1
ones,1
InitializeSpawners(),1
\friendly,\,1
EXIST,1
arrive,1
Reapply,1
Checking,1
bSC.Sockets),1
ShipRespawn;,1
75f,1
if(m.Reward.Components,1
allocate,1
indexed,1
points[i].color,1
times,1
(_factionPatrols,1
MonoBehavours,1
early,1
(CSteamID)pCallback.m_ulSteamIDLobby;,1
walking,1
GenerateStation(StationData,1
SimplePatrolController,1
newSpawnPoint.transform.parent,1
he,1
(Components,1
_factionPatrols),1
Space,1
disconnects,1
Script,1
/*protected,1
hover,1
val),1
realised,1
Save(),1
\npc,\,1
edge,1
(dist,1
BuildTargetShips(param.Contract);,1
if(!Components.Contains(comp)),1
if(socket.connected),1
socketTransform,1
\name="\style"\>Style.</param>\,1
(_ship.Head.Equals(bSC)),1
SetShip(string,1
Application.Quit(),1
re-adding,1
TargeterHUD,1
Asteroid,1
intialize,1
Communicates,1
scenes,1
MissionFailed;,1
socketTransform.GetComponent<SocketBehaviour>();,1
\_requirements.Add(mat,\,1
_HomePoints.Count)];,1
performance,1
\spawns.Add(BuildSpawn("\asteroidSpawnFollow"\,\,1
\name="\teamA"\></param>\,1
bases,1
.10f);,1
Self,1
\"\ver"\,\,1
up),1
returned.</param>,1
publish,1
IPointerExitHandler,1
OnlineState.Lobby:,1
Transform;,1
Lower,1
directional,1
AddComponent(List<string>,1
PlaceComponentGO(component);,1
Respawn},1
m_attributes.OnlineState,1
played,1
Vector3.down;,1
HUDs,1
HeartBeat(),1
\"\friendlySpawn"\:\,1
LoadExistingShip(ShipData,1
\name="\npc"\>Npc.</param>\,1
engage,1
machine,1
launches,1
missionStation,1
\name="\sockets"\>Sockets.</param>\,1
Acts,1
\IPointerEnterHandler,\,1
MAY,1
sides,1
att.RequiredMats),1
request,1
(_mission,1
_att.Contract.Rewards);,1
\name="\playerControllerId"\></param>\,1
Mathf.CeilToInt(_maxAttackCount,1
pauses,1
_storedShips.Count),1
PlaceComponentGO(piece);,1
anchor,1
tex.height*0.002f);,1
condition,1
borders,1
problem,1
requirements.Keys),1
component.Folder,1
Construction,1
accessed,1
true),1
PlayerShip;,1
Tracks,1
\(_ships[1],\,1
check</param>,1
asomething,1
MaterialListSync,1
GO.name;,1
\"\PlayerShip"\)\,1
proccess,1
processing,1
ShipDataImporter,1
UpdateReward(RewardInfo,1
3);,1
(_currentShip,1
filtering,1
AddedIDs);,1
m_att.LobbyCreatedCallResult,1
entire,1
2D,1
ShipCompPrefab;,1
mission.DestroyGoal.ToString();,1
opposite,1
\UnAvailable.Add(int.Parse(Regex.Match(ship.Name,\,1
(!ship.PlayerMade,1
newShip.Head);,1
EnemySpawner.ShipGen,1
AsteroidSpawner.Asteroid,1
e.Reward.Xp;,1
Calling,1
20f,1
Hide,1
Progress,1
LocalLocation,1
s.OtherID),1
GameManager.GetPlayer.ShipList,1
structure,1
1),1
\name="\newItem"\></param>\,1
free,1
COMPONENT,1
\0.89f,\,1
recognized,1
\name="\rect"\></param>\,1
Disable:,1
contract).transform.position;,1
tool,1
z,1
features,1
\name="\lobbyID"\></param>\,1
_unlockedComponents;,1
switching,1
achievements,1
\space..."\));\,1
utils,1
Blends,1
_shipGen,1
Like,1
metal,1
(_collectedMaterials[matPos].Amount,1
WaitForSeconds(1f);,1
RESULT,1
Audio,1
PopupType.Lose:,1
functs,1
leaving,1
\"\cargo"\:\,1
EndGame(bool,1
1.0.3,1
Cycles,1
Data.Space,1
Places,1
GetComponent<SpriteRenderer>().sprite;,1
NetworkServer.UnSpawn(this.gameObject);,1
Options,1
\action,\,1
offscreen,1
Tests,1
functional,1
_attackGroupSpawn;,1
14,1
Starter,1
Retrieves,1
shortest,1
mousefollow,1
monoB,1
alsojust,1
valid,1
item.SetPlayerAmount(current,1
invitations,1
AsteroidSpawner.AstGen,1
newList;,1
GameManager.GetPlayer.AddShip(item);,1
if(e.Reward,1
Position:,1
cubic,1
_curStationGuard;,1
quick,1
_faction,1
\needed,\,1
pre,1
(_attr.engineVelocity.normalized,1
Initiailize,1
(enum),1
angleDiff,1
SecondaryTracker.Add(mission);,1
\"\high"\:\,1
offsettinng,1
_collectedMaterials.Add(mat);,1
\"\untitled\,1
\"\default"\);\,1
RESOURCES,1
Delays,1
Animator,1
contractID),1
_att.StarterList.Contains(GO)),1
networking,1
components',1
persistent,1
GameManager.GetPlayer.Ship.Name;,1
_spaceCoordinates;},1
illusion,1
Lost,1
itemObj,1
resize,1
draggable,1
windows,1
mission.Reward.Xp;,1
RETRIEVE,1
newShip.gameObject.AddComponent<SegmentObjectBehaviour>();,1
\name="\alignment"\></param>\,1
\Objectives:\n\n"\;\,1
How,1
param.Contract.EnemyWaves;,1
curve,1
_ship.Head.GetComponent<RectTransform>().localPosition,1
IconTex;,1
\SendMessage("\UpdateReward"\,\,1
(_waitTimeGuard,1
if(mission.Reward,1
MissionPassed;,1
Triggers,1
\"\playerSpawnFollow"\:\,1
team's,1
CmdAddMaterialToPool(List<MaterialData>,1
tracks,1
ship.Name,1
rudimentary,1
group.Target,1
Made,1
(m_attributes.LobbyListPanel.activeSelf),1
Switch,1
\_att.ShipsCreated},\,1
catch,1
_factionList.Add(newFaction);,1
\Mission.Remaining.ToString("\F0"\)\,1
SecondaryTracker;,1
Mission;,1
initialing,1
\"\\n"\)));\,1
boxes,1
OpenPopupWindow(string[],1
RpcSpawnMe,1
messegeCount--;,1
CurrentState;,1
\ProcessMaterials(Dictionary<MaterialData,\,1
_ship.Links.Keys),1
\1000f),\,1
spawn.SpawnType;,1
ShipLibrary.GetAll()),1
esstenial,1
_att.EnemySpawn,1
anim;,1
bSC.ChangePending,1
CURRENT,1
\successful,\,1
StartingPos;,1
exhausts,1
ON,1
passes,1
whem,1
succesfully,1
clip,1
if(_att.Contract.ContractStatus,1
sizes,1
_stationShipRespawn;,1
existance,1
_att.Contract.ProcessMaterials,1
\col.y,\,1
ContractState,1
ShipTextureUtil();,1
\Color(0f,1f,0f,.2f);\,1
\name="\station"\>Station.</param>\,1
doesn't,1
GameManager.GetPlayer.Ship.Name),1
GameObject;,1
my,1
Prepare,1
Real,1
0.1f),1
base.SpawnAttackShip(group);,1
sign,1
GameManager.GetPlayer.NextLvl);,1
CurrentExp.text,1
\SendMessage("\EndGame"\,\,1
900f;,1
m_attributes.dMsg});,1
instruct,1
files,1
\randomized,\,1
\beforehand,\,1
EXISTS,1
item.</param>,1
\name="\item"\></param>\,1
\name="\netMsg"\></param>\,1
if(e.Reward.Materials,1
playHUD,1
bSC.ShipComponent;,1
SaveCompSockets(BaseShipComponent,1
\administrator"\)\,1
Drags,1
Ast,1
PopupType.Respawn;,1
\{{"\elapsed\,1
FindNewPoint(npc);,1
socket.OtherID));,1
6,1
col.offset,1
Goal.text,1
\name="\teamID"\></param>\,1
immediate,1
http://technet.microsoft.com/en-us/sysinternals/bb896647.aspx,1
ShipRespawn.SetActive(true);,1
\Hit,\,1
cargo.SetAlignment();,1
Sync,1
\name="\up"\>Up.</param>\,1
minimally,1
you're,1
_att.TeamSpawn.CmdSpawnNewPlayerShip();,1
Amounts,1
GameManager,1
NEED,1
_renderer,1
ForceMode2D.Impulse);,1
PrimaryTracker.Add(mission);,1
_att.ComponentList.Clear();,1
additionally,1
heal,1
\("\PlayerShip"\).transform.up;\,1
BeginLobbySearch();,1
ArrayList();,1
Private,1
contract.Contract.PrimaryMissions),1
\Ship,\,1
owners,1
sticking,1
if(!AddedIDs.Contains(socket.connectedSocket.ObjectID)),1
recount,1
\name="\baseShipXml"\></param>\,1
direction.</returns>,1
modify,1
\PopupType{Win,\,1
Asteroid;,1
shortist,1
kg,1
force,1
Sliders,1
if(m_attributes.sID,1
\name="\TeamID"\></param>\,1
onstage,1
refreshes,1
CAMERA,1
ScriptableObject,1
_req;,1
5f);,1
selectors,1
tries,1
e),1
components.</returns>,1
Hides,1
_sockets),1
smoothly,1
\spawns.Add(BuildSpawn("\enemySpawnFollow"\,\,1
retreives,1
SimpleAttackController,1
GetComponent<EditorAttributes>();,1
(Mission,1
shipIndex),1
Initailze,1
if(_ship.AddedIDs.Contains(piece.InstanceID)),1
CreateItem(GameObject,1
ContractLibrary.ReturnContract(contractID);,1
embedded,1
SpaceLocation,1
dimentions,1
\"\asteroidSpawn"\:\,1
_factionAttackers,1
\name="\sourceSocket"\>Source\,1
Enable,1
damaging,1
Creation,1
otherRenderer.sortingOrder,1
now),1
repair,1
Units,1
connectedSocket,1
render.sprite,1
if(e.Reward.Components,1
\name="\compare"\></param>\,1
begintracking,1
_patrolGroupSpawn;,1
\0.415f,\,1
\found!"\);\,1
Disengage(),1
positioning,1
\"\enemySpawnFollow"\:\,1
OnlineState;,1
Assembly,1
Reimbursed[mat];,1
\name="\Obj"\></param>\,1
OnStateChanged(CurrentState);,1
\3f,\,1
atm,1
attack;,1
parents,1
\enemy,\,1
Design,1
raider.target,1
materals,1
patGroup.Station,1
Then,1
param.Player;,1
parellax,1
divided,1
GameBuilder,1
UTIL,1
[System.Serializable],1
param.Contract;,1
MonoBehaviour,1
COROUTINE,1
define,1
team-owned,1
Listeners,1
cmd,1
(reward.Materials[mat],1
\Otherwise,\,1
AttackGroup();,1
Data.Shared.Component();,1
receiver,1
default/loaded,1
slow,1
delegated,1
avatar,1
\"\desc"\,\,1
playerspawn,1
/*PlayerSpawner.ShipGen,1
e.Reward.Materials[mat];,1
Calc,1
Continue,1
wipe/clear,1
_curAttackCount,1
receives,1
CINFIGURATION,1
Con.ComponentType;,1
collectable,1
(shipIndex,1
everything,1
most,1
(LobbyCreated_t,1
low,1
(FactionTemplate,1
CycleFriendlySpawn(),1
directly,1
positoning,1
item.SetAmount(0f);,1
\reload,\,1
if(piece,1
\name="\pos"\>position\,1
(_ast.Contains(obj)),1
PanelFadeEffects.FlashInItem(m.box.GetComponent<Image>());,1
Transition.LostEnemy);,1
AsteroidSpawner.Target,1
ShipConstructPanel),1
\built,\,1
Replace,1
_att,1
ContractTracker,1
msg,1
category,1
1st:,1
false),1
currentTime,1
OnlineState.Lobby;,1
KD,1
\PopupRect.SendMessage("\UpdateReward"\,\,1
garenteed,1
\pState.AddTransition(Transition.SawEnemy,\,1
Obtain,1
tick,1
_mission.EnemiesDestroyed.ToString();,1
ot,1
currentStateID,1
density,1
_tex.Delete(_ship.Ship.Name);,1
attribute,1
Level++;,1
\name="\station"\></param>\,1
(_unlockedComponents.Contains(inComp)),1
((_maxWaitTimeAttack,1
users,1
patrol.isLead,1
GameObject.Destroy(HoverWindow);,1
if(_util.DraggedObj.Equals(bSC)),1
\enemy."\));\,1
Destroyed(SegmentObject,1
THEY,1
Elapsed.text,1
persist,1
90;,1
list.</returns>,1
ContractState.Pending),1
\Valve,\,1
(1,1
generates,1
foreach(SocketBehaviour,1
data.Keys),1
(!_att.MapBounds.Contains(playerShip.transform.position)),1
\"\enemySpawn"\:\,1
txtItemPrefab;,1
\name="\collidingSockets"\>Colliding\,1
List<PatrolGroup>();,1
aggressor,1
explanitory,1
Vector2[],1
BUILDS,1
draw,1
item.SetAmount(_Materials[mat]);,1
utlity,1
\name="\step"\></param>\,1
(Follow.Contains(param.Self)),1
\pState.AddTransition(Transition.Eject,\,1
(newShip.GetComponent<ShipMessegeController>());,1
piece);,1
granted,1
newList,1
\name="\newObj"\></param>\,1
basics,1
\PlayRect.SendMessage("\DisplayMessege"\,\,1
(tooclose),1
\if(!_util.InBounds(ShipBoundsPanel.GetComponent<RectTransform>(),\,1
Every,1
_threatActivity);,1
serves,1
Prompts,1
BuildContractList(),1
\Con.ComponentType,\,1
GameObject.Destroy(bSC.gameObject);,1
inMat.Amount),1
SHOULDN'T,1
attemping,1
_mission;,1
newShip.gameObject.AddComponent<SimpleFriendlyController>();,1
twice,1
\lobby,\,1
_targeterHUD.gameObject.SetActive(true);,1
APPLY,1
Friendly.text,1
AstGen.GenerateSingle,1
List<SegmentObject>,1
m_attributes.sID);,1
positional,1
dispatching,1
!_util.DraggedObj.Connected),1
\name="\key"\></param>\,1
Placed,1
\name="\colliderObject"\>Collider\,1
\loot,\,1
\,\,1
\"\guard"\;\,1
flashing,1
ClearShip(),1
endgame,1
GameManager.GetPlayer.ShipList.Remove(_ship.Ship);,1
BuildStation(new,1
_att.SegObjs[index]._type,1
e.Reward.Materials[mat]);,1
communication,1
_minWaitTimeStation,1
\("\\nName:\,1
combine,1
Velocity,1
List<Socket>();,1
m.Reward.Materials[mat];,1
detract,1
collide,1
_ast.Add(AstRef);,1
_station,1
cases,1
_base.Player);,1
(m_shipRef.Launchers.Count,1
These,1
cycling,1
lobbys,1
short,1
performs,1
Mathf.CeilToInt(_maxPatrolCount,1
tell,1
_factionList,1
Name.text,1
nothing.,1
\"\Enemy"\;\,1
bIOFailure),1
typeof(Sprite));,1
ShipUIUtility,1
BuildStation(Vector2,1
STORE,1
comps.Clear();,1
(ReturnAmt.ContainsKey(mat)),1
\GenerateShip(ship,\,1
dimensions,1
respawns,1
wider,1
newStation,1
\debris,\,1
\name="\colFrom"\></param>\,1
OpenLobbyListWindow(),1
0.0f,1
presents,1
job,1
Male,1
points[i].color.b*.98f);,1
restore,1
Draw,1
group.Target.position),1
List<PatrolGroup>,1
Transition.SawEnemy);,1
\Resources.Load(station.GetPath,\,1
Debug.Log(e.Message);,1
attaches,1
net,1
wData.Self,1
contract.Requirement),1
newObj.transform.SetParent(ShipConstructPanel);,1
artificer,1
correctly,1
e,1
Creator,1
endless,1
(Camera.main.ScreenToWorldPoint,1
RunUpdate(),1
dMsg;,1
\steamID,\,1
Open,1
Maybe,1
\(string.Format("\{0}/{1}"\,\,1
effects,1
populated,1
\pCallback,\,1
Align,1
GameManager.GetPlayer.SetShip(0);,1
_threatActivity;,1
here:,1
_util.UpdateSavedMsg(Changed);,1
GameManager.GetPlayer.AddMaterial(mission.Reward.Materials);,1
GeneratePlayerShip(ShipData,1
matckmaking,1
Stats,1
PS.Engage();,1
environment,1
section,1
(!m_att.OnlineState.Equals(CurrentState)),1
ExpendTeamStorage(List<MaterialData>,1
container.GetComponentInChildren,1
File.ReadAllBytes(path,1
Loads,1
members,1
inserted,1
if(bSC.ShipComponent.InstanceID,1
EXISTING,1
_factionPatrols.Add(group);,1
Changes,1
COME,1
source,1
PopulateShipList();,1
Gives,1
timers,1
\(Vector2.Distance(newPos,\,1
nested,1
(_factionAttackers,1
Or,1
anyway,1
preform,1
playercam,1
GameObject.FindGameObjectWithTag,1
\name="\connected"\>Connected.</param>\,1
tank,1
behaves,1
Stops,1
if(component.ChangePending),1
group.Target.position.x,1
ComponentItemPrefab,1
\volume,\,1
Teams,1
\name="\wreck"\></param>\,1
PopupType.Respawn:,1
//Waves,1
gameplay,1
Mission.Objectives();,1
\name="\exempt"\>\,1
\"\type"\,\,1
PatrolGroup,1
DeletePiece(BaseShipComponent,1
mid,1
confirm,1
base.SpawnPatrolShip(group);,1
physically,1
var,1
ShipName.text;,1
\now,\,1
mats.Clear();,1
_req.Requirements[mat])),1
Rebuild,1
(exist.FindIndex(x,1
(StationData,1
filter;,1
cargo.SetController,1
nID,1
_stationShipRespawn),1
\m_attributes.PopupPanel.SendMessage("\AssignMsg"\,\,1
\(Sprite)Resources.Load("\Textures/wreck"\,\,1
_maxStationGuard;,1
interacting,1
\name="\newID"\></param>\,1
Generic,1
stationimg;,1
Exp,1
\AddMaterial(Dictionary<MaterialData,\,1
Instantiate(Resources.Load,1
populates,1
Init,1
render.sortingLayerName,1
FriendlySpawnManager(param);,1
\scndObj.AddConnection(s.OtherLinkID,\,1
UTILS,1
requirements[mat]);,1
Status,1
spaces,1
DestroyProjectileDelay();,1
FriendlySpawnManager.AddShip(newShip);,1
500,1
\types,\,1
GameManager.GetPlayer.Cargo.Remove(mat);,1
GameManager.GetPlayer.AddXP(mission.Reward.Xp);,1
failure,1
GenerateContractObjects(ContractData,1
Passes,1
Snaps,1
\Follow[Random.Range(0,\,1
Texture,1
\created"\,\,1
stay,1
yourself,1
30fps,1
supply,1
(_unlockedComponents,1
Velocity);,1
yellow,1
1000f),1
faction/team,1
Goal;,1
retList;,1
bolt,1
\("\Space/Ships/Ship"\),\,1
ComponentData,1
ignored,1
SelectShip(ShipData,1
\dist,\,1
Moves,1
Repeat,1
\SaveCompSockets(_ship.Head,\,1
-1f;,1
_req.AddComponent(component);,1
_curPatrolCount;,1
_MatListItems.Clear();,1
wreck,1
ProcessStationReached(Transform,1
\SaveCompSockets(socket.connectedSocket.container,\,1
_ship.AddedIDs.Add(component.InstanceID);,1
_attr.acceleration;,1
Let,1
multiplayer,1
\@"\\d+"\).Value));\,1
UpdateXP(),1
picks,1
RequirementInventory,1
confirmed,1
increment,1
hit.damage;,1
m_list;,1
int>,1
loads,1
item.GetRequirements()[matName])),1
Message.text,1
destroyed.AddComponent<SegmentObjectBehaviour>();,1
Grey,1
Encapsulated,1
(temp),1
SetMission(MissionData,1
rebuild,1
behave,1
Window,1
_sockets;,1
(GameManager.GetPlayer.Cargo.Count,1
render.sortingOrder,1
\name="\socketID"\>Socket\,1
XP,1
inside,1
station.Position.y,1
_stationName;,1
\name="\SpawnID"\></param>\,1
unique,1
_ship.Components.Remove(bSC);,1
catch(Exception,1
\name="\trackObj"\></param>\,1
list.</param>,1
Selects,1
[mat]);;,1
(WaveNumber+1).ToString()));,1
_newShip;,1
FactionTemplate;,1
m_attributes.sID,1
Rewards;,1
Getter,1
\death,\,1
\Station"\,\,1
if(Rewards.Materials.ContainsKey(key)),1
\name="\errorCode"\></param>\,1
serialized,1
ATM,1
if(m_attributes.fInfo,1
UTILITIES,1
\Debug.Log("\Ship\,1
Accessible,1
GameObject[],1
prospect;,1
associated,1
CloseAllTabs(),1
singular,1
details,1
sources,1
\name="\isNil"\></param>\,1
_req,1
Contaier,1
};,1
increases,1
\name="\hit"\>hit.</param>\,1
(type,1
MatIs(MaterialData,1
CallResult<LobbyCreated_t>,1
getting,1
occurence,1
group.Target.position.y,1
Source,1
component.Direction,1
(in,1
FSMStateID.Chasing);,1
Matchmaker_,1
\Color(0.368f,\,1
Refence,1
ContractType.Targets),1
temp.Sockets,1
Writes,1
rotors,1
generation,1
\list,\,1
p.s,1
Active,1
Develop,1
DRM,1
\"\Generating\,1
_minWaitTimeStation),1
\"\name"\,\,1
why,1
square,1
List<int>();,1
if(m.Reward.Materials,1
SteamUsername,1
_att.ShipsDeleted}});,1
ATTRIBUTE,1
\"\as\,1
projectile;,1
needs,1
_ship.AddedIDs.Clear();,1
\name="\segment"\></param>\,1
if(_storedShips,1
compares,1
\"\asteroidSpawnFollow"\:\,1
\passed,\,1
_homePoints;,1
AttackGroup,1
LoadConnections(),1
_newShip.gameObject.AddComponent<SimpleAttackController>();,1
_attackPoints;,1
ChangeState(OnlineState,1
\name="\data"\>Data.</param>\,1
evaced,1
_ship.AddedIDs.Remove(bSC.ShipComponent.InstanceID);,1
\component.Name,\,1
GameManager.Version);,1
https://partner.steamgames.com/documentation/example,1
BuildComponent(Data.Shared.Component,1
enviroment,1
missionStation;,1
BaseSpawnMaxDistance,1
360f;,1
SyncList.Add(BuildGalaxy(newPos));,1
\Failed,\,1
OptionalMissions,1
BE,1
_renderer.sortingLayerName),1
param.Sockets;,1
\"\Running\,1
xp),1
raider.SetController,1
Write,1
Quaternion.identity),1
eg:,1
Zoom,1
Follow.Remove(param.Self);,1
GAME,1
friction,1
m_attributes.FilterPanel.SetActive(true);,1
moving,1
e.Reward.Materials.Keys),1
_factionAttackers.Add(group);,1
originally,1
closed,1
\name="\isMale"\>If\,1
15;,1
playing,1
warning,1
checker,1
tweening,1
((SimplePatrolController)fsm).SetGroup(group);,1
_factionAttackers;,1
I.</param>,1
Total,1
repair),1
colliding,1
param.Contract.FriendlyWaves;,1
params,1
ContractState.Completed;,1
foreach(ConstructInfo,1
(_waitTimeAttack,1
Retieve,1
Copies,1
OptionalMissions;,1
normalvalue,1
CmdUnlockComponents(List<string>,1
CmdAddStation(NetworkInstanceId,1
orbit,1
\LobbyDataUpdate,\,1
mission.Reward.Materials[key]);,1
component.InstanceID,1
CreateNewShip();,1
\_timer.ToString("\F0"\)\,1
SocketBehaviour,1
_att.Contract.Initialize(param);,1
BuildSpawners(spawns.ToArray());,1
tab),1
Image,1
PLANNED,1
feilds,1
_Materials,1
UpdateFactionStatistics();,1
200.0f),1
affects,1
reward),1
_ship;,1
(component.Sockets,1
\"\Socket"\)\,1
wrong,1
\Steam,\,1
PopupPanel;,1
IMAGE,1
MsgWipe(),1
tempComp,1
\name="\Station"\></param>\,1
START,1
elapsed,1
Objectives.text,1
buffer,1
font,1
\Requirements.Add(mat,\,1
ccomponent,1
\name="\info"\></param>\,1
Played,1
increments,1
(_stations,1
\"\Components"\)\,1
SetAttributes(,1
station.Position,1
~EnemySpawnManager(),1
_minWaitTimeAttack,1
ContractLibrary.ReturnContract(_base.Contract.ID+1);,1
INSTANCE,1
firstObj,1
NOT-TARGETING,1
pitch,1
\"\Friendly"\)\,1
GO.transform.GetComponent<WeaponController>().Init();,1
[0],1
physics,1
IDManager,1
Releases,1
_ship.Ship.GetComponent,1
_factionAttackers),1
joins,1
\home,\,1
player.</returns>,1
\.GetComponent<ShipGenerator>(),\,1
degrees,1
Under:,1
\safe,\,1
prev),1
\container,\,1
(m_attributes.LobbyPanel.activeSelf),1
_req.RemoveComponent(bSC.ShipComponent);,1
NetIDListSync();,1
DefineMission(AttritionMission,1
post,1
Large,1
if(GameManager.GetPlayer.Level,1
(GameManager.GetPlayer.ShipList.Contains(_ship.Ship)),1
_ship.Links[s];,1
\name="\conn"\>Conn.</param>\,1
trust,1
Detects,1
(socket.alignment,1
flickering,1
LobbyPanel;,1
Here,1
REFERENCE,1
attack.SetFaction(_faction,1
_att.MapSize.y),1
games,1
xp;,1
applied,1
shift,1
GameManager.GetPlayer.AddComponent(mission.Reward.Components);,1
presses,1
serverAddress;,1
Small,1
recall,1
TEXTURE,1
newShip.Name;,1
VARS,1
lock,1
m.Objectives();,1
3/4s,1
_shields.SetShipData(shipData);,1
(ft^3),1
to.</returns>,1
newStation.tag,1
\name="\origin"\>Origin.</param>\,1
col.z);,1
_att.EnemySpawn.CycleEnemySpawn();,1
\"\ship"\));\,1
_tex,1
ContractType.Targets:,1
friend,1
\points[i].color.g*.98f,\,1
_factionGuards;,1
Results,1
addedlist,1
_stations,1
(Reimbursed.ContainsKey(mat)),1
field,1
[Level],1
delegate{listener.SelectTab(item);});,1
\(Asteroid,\,1
GameManager.GetPlayer.Ship.IconTex;,1
(lol),1
_factionPatrols,1
_faction;},1
Shield,1
server's,1
Angle,1
duplicates,1
if(!MissionPassed.activeSelf),1
license,1
deletes,1
tags,1
Construct,1
wData);,1
expendature,1
_ship.Components.Add(bSC);,1
\here,\,1
attacker,1
gold,1
deactivates,1
master,1
\world,\,1
_att.Controller.ClearShip();,1
disables,1
pLobby),1
\LoadConnectedObjects(_ship.Head,\,1
respostion,1
List.CreateItem(Tracked);,1
Vector3.right;,1
clicks,1
0.9,1
At,1
ConstructFSM();,1
FriendlySpawnManager(GameParameters,1
------------------------------------------------------------------------------|,1
socket.connectedSocket,1
faction.Activity);,1
\_spawn.InitializeSpawner(GameObject.Find("\space"\)\,1
deaths,1
/*if,1
DOES,1
newState),1
recommended,1
localhost,1
whatever,1
args,1
galaxyDistance),1
Delay(),1
lengthways,1
https://partner.steamgames.com/documentation/bootstrap_stats,1
iteration,1
PrimaryTracker,1
persistant,1
\+"\.png"\);\,1
.5,1
Components.Add(comp);,1
boxCollider,1
\asteroids,\,1
behaviour.Station,1
Enables,1
Listening,1
\if(GameObject.Find("\_gui"\)\,1
\name="\sock"\></param>\,1
rewardText;,1
num,1
GOToFollow.transform.position;,1
\Resources.LoadAll("\Space/Ships/"\+tab,\,1
inComp),1
Label.text,1
SPAWNING,1
data.Segment.Size;,1
AIAgents,1
completed,1
\ReturnAmt.Add(mat,\,1
StationData(),1
faction.UpdateShips();,1
\"\BackgroundObjects"\;\,1
Net,1
Grabs,1
initialisation,1
GuardGroup();,1
give,1
relevent,1
EXTERNAL,1
\"\Space/asteroid"\;\,1
m_attributes.LobbyPanel.SetActive(false);,1
initializing,1
experiance,1
retrieving,1
\name="\i"\></param>\,1
collisions,1
Btn.onClick.AddListener(,1
if(!GameManager.GetPlayer.Completedlevels.Contains(Contract.ID)),1
Boundary,1
newSpawnPoint,1
reusing,1
siince,1
BuildSpawners(SpawnPointData[],1
(CycleFailure),1
Affects,1
newObj.GetComponent<BaseShipComponent>();,1
XP;},1
60f;,1
routines,1
lots,1
_curPatrolCount,1
_factionList;,1
CONST,1
m_att.OnlineState,1
unlock,1
Once,1
stationimg,1
modifiers,1
[NonSerialized],1
\_HomePoints[Random.Range(0,\,1
Enemy.text,1
awating,1
up);,1
newShip.AddComponent<SimpleEnemyController>();,1
\name="\inComp"\></param>\,1
(!_unlockedComponents.Contains(comp)),1
\perpetual,\,1
AppId_t.Invalid,1
\4900f),\,1
manual,1
newState;,1
(data.Direction,1
_stationName;},1
Connect.Confirm();,1
defense,1
GameManager.GetPlayer.SetShip(ship);,1
\"\Au"\\,1
repeat,1
CloseAllTabs();,1
Mathf.CeilToInt(_maxStationGuard,1
least,1
ships),1
transform.position.y)),1
text.text,1
Enter,1
SHARED,1
mission.Reward.Materials[key];,1
(PatrolGroup,1
_spawn.Boundaries,1
if(data.button,1
NEEDED,1
\monobehaviour,\,1
(BaseShipComponent,1
tempComp;,1
customized,1
InitializeShips(List<ShipData>,1
Direction,1
Ast.AddComponent<SegmentObjectBehaviour>();,1
toggles,1
item.button.image.color,1
defines,1
EditorAttributes,1
allegance,1
\//print(string.Format("\Component:\,1
forget,1
FUTURE,1
\name="\Panel"\></param>\,1
base.SpawnGuardShip(station);,1
hovers,1
Players,1
\name="\type"\></param>\,1
non-interactive,1
independant,1
OnLobbyCreate,1
200);,1
default/start,1
receiving,1
hData.damage;,1
\"\cargo"\;\,1
RESOURCE,1
Audio_,1
CType,1
\"\Station_External_Small_01"\);\,1
Popup_,1
\string.Format("\\nExp:{0}\n"\,\,1
\PersonaStateChange,\,1
\remaining."\;\,1
atlas,1
searching,1
confirms,1
Random.Range(group.Target.position.x,1
aData;,1
autolock,1
_AttackPoints.Count)];,1
tho,1
It,1
_storedShips.Add,1
(newState),1
\Vector2(transform.position.x,\,1
RPCS,1
_util.ReturnNextAvailableInstance();,1
node,1
panel),1
inNetID),1
SEGMENT,1
_unlockedComponents),1
\m_attributes.LobbyPanel.SendMessage("\AssignLobby"\,\,1
FactionSpawnerTemplate,1
_att.ShipsCreated++;,1
boolean,1
_curStationGuard,1
reward.Materials.Keys),1
\gen,\,1
PrimaryTracker.Remove(mission);,1
_int;,1
\components,\,1
buy,1
\/*UnityAnalytics.CustomEvent("\ExitShipEditor"\,\,1
MissionFailed.SetActive(true);,1
\(Vector2.Distance(homeStation,\,1
\"\default"\;\,1
if(m.Reward,1
\server!"\);\,1
UpdateStorageContents();,1
\name="\other"\>Other.</param>\,1
selections,1
attibutes,1
(!_util.IsDragging),1
defaults,1
(maybe,1
_localCoordinates;},1
\BuildStation(targetStation,\,1
differently,1
m_attributes.PopupPanel.SetActive(true);,1
dHeader;,1
List<FactionTemplate>,1
valueToAdd);,1
(_factionGuards,1
\SendMessage("\BuildContractData"\,\,1
\"\-debug_steamapi"\\,1
CSteamID.Nil),1
\name="\library"\></param>\,1
ASSIGN,1
UpdateReward(object,1
mission.Reward.Materials.Keys),1
(station,1
List<AttackGroup>,1
implementation,1
~FriendlySpawnManager(),1
statObj.GetComponent<StationBehaviour>().Enter,1
\name="\player"\>Player.</param>\,1
INFORMATION,1
scale;,1
\Vector3(tex.width*0.002f,\,1
AstRef);,1
BaseSpawnMinDistance,1
(ship.Name,1
OBJECTS:,1
CmdReduceInventory(inMat);,1
target.position);,1
temporary,1
Convert,1
Matchmaking_,1
ShipName.text),1
_attr.Ship,1
finalized,1
\150f),\,1
(Mathf.Abs(_attr.engineVelocity.magnitude),1
sID;,1
reimbursed,1
_base.Player.LocalUp,1
beforehand,1
\Random.Range(1,\,1
Launching,1
Spreading,1
\placed"\,\,1
simulation,1
m_attributes.LobbyListPanel.SetActive(true);,1
if(obj.Equals(wData)),1
Thus,1
this);,1
\name="\location"\></param>\,1
EResult.k_EResultOK),1
finish,1
Friendly;,1
_maxAttackCount;,1
group.Ships.Add(_spawn.SpawnPatrolShip(group));,1
immediately,1
\string[2]{m_attributes.dHeader,\,1
7,1
CALLED,1
Evac,1
raises,1
taller,1
_ship.Ship.AddMaterial(data);,1
happen,1
Slider,1
NextLvl,1
ContractState.Pending;,1
retreiving,1
\Vector2(0f,\,1
Dimesions,1
_warp;,1
Requirements.Remove(mat);,1
switch(SpawnType),1
ID:,1
SimpleGuardController,1
\name="\alignment"\>Alignment\,1
spawn.Position;,1
station.Name;,1
\name,\,1
relays,1
offset,1
(m_attributes.FilterPanel.activeSelf),1
raider.SetAlignment();,1
exception,1
fizzle,1
ASTEROIDS,1
\{"\pieces\,1
m_beh.CurrentState,1
newStation.layer,1
[shipIndex],1
slowly,1
\(0.712f,\,1
null).ToString()));,1
Network,1
\m_attributes.LobbyListPanel.SendMessage("\SetFilterData"\,\,1
ACCESSORS,1
\deleted"\,\,1
unable,1
\name="\distance"\>Distance.</param>\,1
shiplist,1
OnApplicationQuit,1
Ended,1
mission.Reward.Components),1
transition-state,1
Shutdown,1
retList,1
Passed,1
Video,1
(friendly,1
ShipRequirementsUtility,1
entirely,1
plasmatype,1
FilterPanel;,1
prevGPos,1
Couldn't,1
100KM,1
inMat.Amount;,1
PrimaryMissions,1
byte[],1
Builder.InitializeSpawners();,1
-10f)),1
#endregion,1
occupying,1
ShipTextureUtil,1
if(PrimaryTracker.Contains(mission)),1
_stationName,1
displayed,1
.75f);,1
Brief,1
socket.connectedSocket.ObjectID);,1
Activates,1
\SendMessage("\PopulateComponentList"\);\,1
StationBehaviour,1
_waitTimeAttack;,1
shooters,1
completely,1
\temp,\,1
shipattributes,1
Uses,1
.Create(OnLobbyCreate);,1
SetContract(int,1
if(GameManager.GetPlayer.Components.Contains,1
item.transform.SetParent(_att.ShipItemPanel.transform);,1
resolving,1
\name="\img"\></param>\,1
\Reimbursed.Add(mat,\,1
\MsgParam("\md-red"\,\,1
\transform.position,\,1
\"\Player\,1
broken,1
Extends,1
differing,1
cargo.target,1
grid,1
Vector2[galaxies];,1
(newShip);,1
attempting,1
hit),1
\MsgParam("\md-green"\,\,1
aren't,1
((SimpleAttackController)fsm).SetGroup(group);,1
Retrives,1
\name="\cameraPosition"\></param>\,1
overlapping,1
Version:,1
_localCoordinates,1
StationData();,1
Hit(HitData,1
GetComponent<SpriteRenderer>,1
WORKING,1
PERFORM,1
visable,1
\"\friendlySpawnFollow"\:\,1
1f),1
role,1
Initialise,1
itemObj.GetComponent<ComponentItemPrefab>();,1
wait,1
RCWindow,1
\name="\amount"\></param>\,1
nuremic,1
Enemy;,1
GameManager.GetPlayer.SetShip(item.Name);,1
Controls,1
pointing,1
pool,1
perspective,1
autofire,1
prior,1
_faction;,1
List<int>());,1
(newparameters),1
(ShipComponent,1
-------------------------------------------------------------------------------|,1
\name="\wData"\></param>\,1
dispatch,1
Behaviour,1
symbols,1
currentWreckage--;,1
List<GuardGroup>();,1
_AttackPoints,1
Figure,1
m.Reward.Materials[mat]);,1
FriendlySpawnManager,1
GetPath,1
\name="\newState"\></param>\,1
listening,1
tru,1
(a_data.GetComponents(),1
_ship.Components.Clear();,1
machines,1
zooming,1
),1
_curAttackCount;,1
\name="\type"\>Type.</param>\,1
Keys</param>,1
OnStateChanged(OnlineState.LobbyList);,1
UpdateShips(),1
counteracts,1
mulitple,1
satellite,1
200f;,1
-----------------------------------------------------------------|,1
_tex;,1
(!_stations.Contains(inNetID)),1
\OnlineState{Idle,\,1
1000f));,1
\m_attributes.LobbyPanel.SendMessage("\LeaveLobby"\);\,1
_att.PiecesPlaced++;,1
bSC.ClearConnections();,1
collect,1
}else,1
complete,1
\"\socket\,1
Ship.IconTex,1
_storedShips),1
false).transform.position;,1
UpdateFactionStatistics(),1
heirachy,1
PopupType.Lose;,1
Interaction,1
_dest,1
\name="\LobbyOwner"\></param>\,1
FSMStateID.Ejecting);,1
\StopCoroutine("\Delay"\);\,1
\name="\shipName"\></param>\,1
(stations),1
multiply,1
\bSC,\,1
limits,1
GetBackSockets(Transform,1
SecondaryTracker.Remove(mission);,1
args),1
Speed,1
transform.localScale,1
expend,1
_att.Contract.RunUpdate();,1
\"\/Space/icons"\;\,1
_att;,1
\Time.deltaTime,\,1
2f),1
\(Random.Range(100f,\,1
generated,1
\"\TeamSpawner"\;\,1
advance,1
RANGE,1
recharge,1
valueToAdd,1
(!mission.Success),1
SelectionButton.onClick.AddListener(delegate{listener.SelectShip(ship);});,1
\Lose,\,1
ComponentListener,1
OpenLobbyWindow(CSteamID,1
Element,1
inwards,1
Auto,1
\following\n"\;\,1
FriendlySpawnManager.Travel,1
(_ast.Count,1
valueToAdd;,1
exit,1
\station.Position.y-25f,\,1
attack.SetController,1
/*if(GameManager.GetPlayer.Completedlevels,1
if(Cargo.ContainsKey(mat)),1
(HUD,1
spawnObjs.Length)].GetComponent<PlayerSpawner>();,1
Click,1
BuildTargetShips(ContractData,1
starter,1
Transition.Eject);,1
Redirects,1
if(mission.Success),1
pirate,1
\"\Station"\;\,1
GenerateSpawn(SpawnPointData,1
if(destroyed.AggressorTag,1
m_list,1
Upper,1
decreases,1
AstRef,1
BuildContractList();,1
\if(ship.Name.Contains("\Untitled_"\))\,1
(Hovering),1
_curPatrolCount),1
\||DestUtil.ShipWithinProximity(npc,\,1
OnlineState.Filter;,1
station.Position;,1
_att.Contract.ProcessStationReached(ship);,1
curves,1
_newShip.gameObject.AddComponent<SimplePatrolController>();,1
Engage(),1
male.</param>,1
clicked,1
STORAGE,1
_ships.Add(ship);,1
movement,1
(!CheckTeamStorage(inMat)),1
fire),1
AppID,1
authority,1
scrolls,1
5f;,1
atlas;,1
\seconds."\;\,1
if(socketTransform.tag,1
Network.player.ipAddress;,1
deterministic,1
Look,1
_collectedMaterials.IndexOf(mat);,1
CreateListboxItem(mat);,1
\"\Friendly"\;\,1
amounts,1
List<SpawnPointData>();,1
projectiles,1
bug,1
_type;,1
Random.Range(group.Station.position.y,1
Ended;,1
\ship.AddComponent(tempComp,\,1
faction;,1
counts,1
Sprite;,1
May,1
intended,1
wasn't,1
LOCATIONAL,1
EnemySpawn;,1
param);,1
waiting,1
mat),1
Drag,1
group.Station,1
\Vector3(points[i].color.r*.98f,\,1
wData,1
Decreases,1
Deactivate,1
(CType),1
Status.text,1
funcs,1
rb.AddForce(new,1
wData._symbols,1
SimpleFriendlyCargoController,1
_util.IsDragging,1
ships;,1
dist,1
teamspawner,1
if(!ShipRespawn.activeSelf),1
tempComp.Sockets,1
Mission.Title;,1
GuardGroup,1
FilterInfo,1
CSteamID,1
_req.AddComponent(bSC.ShipComponent);,1
_curAttackCount),1
val);,1
\_att.PiecesPlaced},\,1
seconds),1
non,1
if(_att.Contract.Rewards,1
enemy.</returns>,1
AddedIDs.Add(bSC.ShipComponent.InstanceID);,1
foreach(SpawnPointData,1
_rect,1
initalizing,1
_att.FriendlySpawn,1
if(Cargo,1
Comp,1
SimpleFriendlyGuardController,1
There,1
Artificier,1
List<string>();,1
(station.Position.x,1
Lerps,1
switch(contract.CType),1
\name="\teamB"\></param>\,1
checked,1
newObj,1
_threatActivity;},1
_minWaitTimePatrol,1
DISTANCE,1
\Vector3(0,\,1
newStation.AddComponent<SpriteRenderer>();,1
views,1
surviving,1
button;,1
passing,1
_req.Requirements[mat];,1
Destroy,1
SpawnInitialGuard(),1
_AttackPoints.Add(GameObject.Find(station.Name).transform);,1
PointerEventData.InputButton.Left),1
\spawns.Add(BuildSpawn("\friendlySpawnFollow"\,\,1
(socket);,1
sprites,1
Message;,1
Track,1
\data.Segment.GetObjsOfType("\station"\))\,1
Grab,1
bSC.InitComponent(component);,1
FADE,1
2500f);,1
absorbs,1
CType;,1
Reimbursed,1
happens,1
scrolled,1
_ships;,1
--------------------------------------------------------------------|,1
sphere,1
.Cast<GameObject>(),1
(Input.mousePosition),1
Callback,1
Sockets,1
_texturePath;},1
\player,\,1
\name="\volumeType"\>Volume\,1
ContractBuilder,1
Controller;,1
LobbyListPanel;,1
impacts,1
newStation.AddComponent<StationBehaviour>();,1
Combat,1
bSC.ShipComponent.InstanceID,1
if(GameManager.GetPlayer.Cargo.ContainsKey(mat)),1
_mission.FriendliesDestroyed.ToString();,1
\teams,\,1
PlayerEnterScene();,1
(spawn.SpawnType),1
\call,\,1
Initial,1
SCENES,1
GameManager.SetContract(_controller.SelectedContract.Contract.ID);,1
referenceto,1
ShipAttributes.ShipState.COMBAT:,1
regading,1
//PlayerSpawner.Player,1
waves,1
OnStateChanged(OnlineState,1
did,1
_stations),1
chart,1
LoadConnectedObjects(BaseShipComponent,1
But,1
Random.Range(group.Target.position.y,1
ship.Name));,1
galaxyDistance,1
patGroup.Ships,1
Mathf.CeilToInt(maxDensity*0.02f);,1
group.Station.position),1
respawning,1
GUIs,1
if(otherRenderer.sortingLayerName,1
Follow.Add(Ships[Ships.Count-1]);,1
Button.onClick.AddListener(delegate{listener.CreateNewShip();});,1
_factionGuards.Add(patGroup);,1
undocked,1
150f),1
Prospect,1
BuildEscortShips(ContractData,1
Filter,1
GameManager.ResetPlayer();,1
EnemySpawnManager(param);,1
contract);,1
txtPanel;,1
\"\LoadConnectedObjects:\,1
retreival,1
create),1
decide,1
//protected,1
90f,1
\settings,\,1
_patrolGroupSpawn),1
incoming,1
ShipName;,1
PS.SpawnDelay,1
STATS,1
generic,1
Snap,1
baseShip;,1
sole,1
_waitTimePatrol;,1
0.0,1
serializes,1
GoBack(),1
\"\Textures/StationTextures/"\\,1
retreived,1
List<int>,1
returning,1
fileData;,1
inadequate,1
statistics,1
\100,\,1
destroys,1
tools,1
if(socket.state,1
drags,1
\name="\destroyed"\></param>\,1
Cargo[mat],1
SimpleEnemyController,1
Forward,1
\Teams,\,1
_ship.Ship.CombatResponsive,1
indicate,1
Follow;,1
locking,1
logic,1
_localUp,1
GameManager.GetPlayer.ShipList.FindIndex(x,1
\"\medium"\:\,1
Sort,1
_util,1
GetComponent<ShipUIUtility>();,1
document,1
BuildEscortShips(param.Contract);,1
five,1
large,1
\name="\destinationSocket"\>Destination\,1
PopupType.Win;,1
(GameManager.GetPlayer.Cargo,1
Points.Add(go.GetComponent<FriendlySpawner>());,1
FriendlySpawn;,1
Points.Add(go.GetComponent<EnemySpawner>());,1
protect,1
\name="\shipID"\></param>\,1
Visual,1
mat.Amount;,1
GO.name)),1
Search,1
resources,1
\Rewards.Materials.Add(key,\,1
styles,1
10;,1
AstRef._type,1
_att.Controller.LoadExistingShip(ship);,1
NEW,1
\exist,\,1
Vector3.left;,1
Wave:,1
shit,1
_sockets,1
GameManager.GetPlayer.AddShip(temp);,1
\name="\newShip"\>New\,1
primary,1
OpenFilterWindow(),1
retList.Add(station.transform);,1
SteamMatchmaking.AddRequestLobbyListCompatibleMembersFilter();,1
gradually,1
\name="\yDelta"\></param>\,1
Retrive,1
AddMatsToList(GameManager.GetPlayer.Cargo);,1
CONSIDERATION,1
if(GetRelation(station.FactionName),1
UpdateXP();,1
(m_attributes.PopupPanel.activeSelf),1
Projectile,1
(System.Environment.CurrentDirectory),1
component.Name,1
SteamID,1
Decides,1
s.SocketID);,1
m_attributes.fInfo);,1
Team,1
Random.Range(group.Station.position.x,1
/*_factionGuards,1
data;,1
(mission.Reward,1
_factionActivity,1
StoreRewards();,1
Command:,1
theres,1
formatting,1
alterative,1
\DATA,\,1
\name="\path"\>Path.</param>\,1
Option,1
Darkens,1
if(valueToAdd,1
invoke,1
m_attributes.LobbyListPanel.SetActive(false);,1
compoent,1
statObj,1
m_attributes.dHeader,1
Todo:,1
Static,1
almost,1
#region,1
won),1
(ship.Equals(GameManager.GetPlayer.Ship)),1
data[mat];,1
_timer;,1
(contract.CType),1
(AttackGroup,1
((_maxWaitTimePatrol,1
Boundaries;,1
\Spawning,\,1
Color.yellow;,1
because,1
children,1
_stationGen.GenerateStation(station);,1
group.Ships.Add(_spawn.SpawnAttackShip(group));,1
OnlineState.Popup;,1
THESE,1
awakes,1
LobbyChatUpdate,1
gen;,1
bSC.Equals(_ship.Head));,1
\1f)),\,1
Activate:,1
posititon,1
trans,1
Sprite,1
Panels/Tabs,1
Valve's,1
imports,1
Con,1
ANYTHING,1
if(!contract.Locked),1
owning,1
if(scndObj,1
Optional,1
(_storedShips,1
_ship.Links.Clear();,1
_factionList),1
\aData.SetProspect("\low"\);\,1
Highlight,1
_collectedMaterials;,1
if(station.FactionName,1
\name="\list"\></param>\,1
newSpawnPoint.transform.position,1
depend,1
if(GameManager.GetPlayer.Cargo[mat],1
those,1
GENERATED,1
refernce,1
pLobby;,1
\name="\target"\>Target.</param>\,1
revert,1
(GameManager.GetPlayer.ShipList.Contains(ship)),1
irrevokable,1
few,1
though,1
consider,1
indicator,1
longest,1
(SocketBehaviour,1
view,1
fInfo;,1
_ast,1
THEIR,1
raider.gameObject.AddComponent<SegmentObjectBehaviour>();,1
circular,1
awarded,1
2nd:,1
\Random.Range(100f,\,1
sliders,1
\item.CreateItem(GO,\,1
blend,1
//_att.Contract.ProcessShipDestroyed,1
[SerializeField],1
m.Reward.Xp;,1
_faction),1
against,1
overlaying,1
(CycleCompletion),1
Rewards.Xp,1
Constructs,1
_unlockedComponents,1
MaterialListSync();,1
HintBoxController.Clear();,1
\Vector3(0,0,\,1
saved.</param>,1
SpawnType;,1
\instance.transform.Find("\Messege"\).GetComponent<Text>();\,1
_att.FriendlySpawn.CycleFriendlySpawn();,1
CurrentLvl.text,1
Searches,1
connects,1
\Debug.Log("\Server\,1
\AppId_t(480)"\\,1
PopupType.Win:,1
EnemySpawnManager,1
\"\PathNode"\,\,1
dPC.prospect,1
VIRTUAL,1
progresses,1
IsUnlocked(string,1
_symbols;,1
amt);,1
Access,1
Makes,1
_spaceCoordinates,1
joined,1
Misc,1
PUBLIC,1
firstly,1
gone,1
Primary,1
Leave,1
Cargo,1
identifier,1
DISABLE,1
OS,1
Save,1
\name="\newType"\></param>\,1
provides,1
spawnmanager,1
nullify,1
.ToList();,1
EnemySpawnManager.Target,1
And,1
PanelFadeEffects.FlashInItem(m.arrow.GetComponent<Image>());,1
SpawnInitialGuard();,1
\0.466f,\,1
m.trackDist,1
\name="\keys"\>Pressed\,1
obtaining,1
/*Waves,1
sending,1
warm,1
initial/default,1
Running,1
matchmaking,1
supports,1
Shared,1
\"\Finished!"\));\,1
_att.Controller.CreateNewShip();,1
[shipIndex];,1
strictly,1
Contract.OptionalMissions),1
Init(),1
\_AttackPoints[Random.Range(0,\,1
m_attributes.dMsg,1
List<FactionTemplate>();,1
RECT,1
non-empty,1
solely,1
\"\low"\:\,1
\direction,\,1
\name="\teams"\></param>\,1
_texturePath;,1
conditionals,1
SecondaryTracker,1
ResetShipData(),1
Image.texture,1
600f;,1
OnlineState.Filter:,1
component.GetSockets()),1
purchase,1
_attr.engineMotion.magnitude;,1
(homeMat.Amount,1
_stations.Add(inNetID);,1
z-axis,1
if(shipIndex,1
_currentShip;},1
\if(File.Exists("\Space/icons/"\\,1
\"\guard"\:\,1
bSC.ShipComponent.Direction,1
Randomized,1
belonging,1
homeStation,1
if(!_util.DraggedObj.Equals(_ship.Head),1
ChangeState,1
[2])),1
style.</returns>,1
Common,1
newStation.transform.parent,1
non-UI,1
intersect,1
Initiates,1
SimpleFriendlyController,1
galaxies;,1
interation,1
done,1
SelectTab(string,1
hides,1
addition,1
\afterwards,\,1
\1,\,1
domain,1
\int.Parse(socket.connectedSocket.SocketID),\,1
Image.transform.localScale,1
GameManager.GetPlayer.ShipList.Contains(ship)),1
\name="\integrity"\></param>\,1
swaping,1
playercameras,1
select,1
CurrentState,1
destroyed</param>,1
placing,1
Simply,1
near,1
Instance,1
numOfRocks,1
Docked,1
delete,1
intial,1
Inventory;,1
(ContractData,1
HERE,1
wheel,1
performed,1
group.Station.position.y,1
unsuccessful,1
interated,1
Space.Contract.ContractState.Completed);,1
get{,1
\name="\enemy"\>Enemy.</param>\,1
Manages,1
MsgParam,1
component.ConfirmConnect();,1
\client,\,1
stage,1
type.</param>,1
_Materials.Clear();,1
statObj;,1
newStation.AddComponent<BoxCollider2D>();,1
\Rewards:\n"\;\,1
_unlockedComponents.Add(comp);,1
shoot,1
\Dictionary<Data.Shared.Component,\,1
(newMat);,1
StationDestroyed(DestroyDespatch,1
(E.G,1
_attackGroupSpawn),1
\SteamAPI,\,1
\m_attributes.LobbyPanel.SendMessage("\CreateLobby"\);\,1
\MsgParam("\sm-red"\,\,1
GameManager.GetPlayer.Completedlevels.Add(Contract.ID);,1
switch(_type),1
EnemySpawnManager(GameParameters,1
if(child.name,1
AINT,1
\name="\saved"\>If\,1
infinate,1
PrimaryTracker;,1
numOfRocks;,1
decrement,1
To,1
(Vector2,1
_minWaitTimeAttack),1
_threatActivity,1
AddXP(float,1
\"\Head"\)\,1
\friendly."\));\,1
GetBackSockets,1
GameManager.GetPlayer.SetShip(temp.Name);,1
m.Reward.Components),1
\Vector3.Distance(npc.position,\,1
faction.UpdateFactionStatistics();,1
foreach(NetworkInstanceId,1
UnityEngine.Random.seed,1
if(!temp.Locked),1
(always,1
\exists,\,1
Save();,1
Instantiate(_att.ItemPrefab);,1
AsteroidData();,1
TRANSITIONS,1
Arificer,1
reader.Read(),1
<SpriteRenderer>();,1
_req.Clear(false);,1
InputField,1
\Serializer.Save<PlayerData>("\Space/Player_Data"\,\,1
resets,1
warnings,1
NextLvl.text,1
destruction,1
Bypass,1
if(tex,1
accept,1
\0.305f,\,1
_shields;,1
Contract);,1
Finally,1
ShipConstructPanel;,1
overlap,1
Libraries,1
calculation,1
With,1
camObject.transform.position,1
lose,1
(transform.parent.transform);,1
example,1
fileData,1
huds,1
((reward.Materials[mat],1
LoadConnections();,1
temp);,1
4900f));,1
semi-random,1
Shouldn't,1
Reverts,1
(XP,1
newStation.transform.position,1
Resposible,1
newSpawnPoint.name,1
playlist,1
Bool,1
position.</returns>,1
reward.Xp);,1
shorthand,1
ability,1
Vector3(,1
Similar,1
[Level]),1
\name="\newShip"\></param>\,1
GetComponent<Image>();,1
_int.SetShipData(shipData);,1
Font,1
\is,\,1
Searching};,1
constructed,1
pLobby,1
put,1
rejected,1
Won,1
(Mission.TimeLimit,1
STAY,1
List<SpawnPointData>,1
reward.Components),1
pCallback.m_eResult,1
otherRenderer,1
if(mission.Reward.Materials,1
Don't,1
https://partner.steamgames.com/documentation/drm#FAQ,1
PLAYER,1
MissionPassed.SetActive(true);,1
\StartCoroutine("\Delay"\);\,1
designed,1
Client,1
\map,\,1
Dont,1
ShipRequirementsUtility();,1
SyncListString,1
newSpawnPoint;,1
\clear,\,1
Populated,1
LayerReorderingBehaviour,1
Prefer,1
OnlineState.LobbyList:,1
component.Style,1
FSMStateID.Divert);,1
rebuilding,1
\name="\state"\></param>\,1
Objectives),1
_texturePath,1
\so,\,1
group.Station.position.x,1
seg,1
wData._symbols;,1
MissionData,1
depot,1
NextContract(),1
_HomePoints,1
discover,1
\Vector3(1,\,1
\firstObj,\,1
\name="\resItem"\>Res\,1
DO,1
Added,1
if(!MissionFailed.activeSelf),1
Enumerators,1
built,1
\(DestUtil.FrontIsClear(npc,\,1
\name="\selection"\></param>\,1
followed,1
_collectedMaterials.RemoveAt(matPos);,1
(state),1
_waitTimeGuard;,1
restarting,1
m_attributes.PopupPanel.SetActive(false);,1
\GameObject.FindGameObjectWithTag("\Player"\).transform.position;\,1
dragged,1
therefore,1
List<GuardGroup>,1
dragging,1
attacked,1
inner,1
AddedIDs),1
(may,1
Follow.Count)];,1
ShipList,1
bSC),1
item.GetRequirements()[matName];,1
args[1];,1
_warp.SetShipData(shipData);,1
\automatically,\,1
causes,1
_req.Clear(true);,1
faction),1
station.</returns>,1
newMat),1
behaviour.rockDensity,1
command,1
newShip.gameObject.AddComponent<SimpleFriendlyGuardController>();,1
respective,1
Instantiate(ShipCompPrefab);,1
print(index);,1
miss,1
object.</returns>,1
(socket.OtherID);,1
ShieldHUD,1
_collectedMaterials,1
targeted,1
logo,1
-90f)),1
Consider,1
_HomePoints.Add(GameObject.Find(station.Name).transform);,1
_station;,1
300f;,1
newStation.name,1
recursive,1
\obj.Create(200f,\,1
60;,1
_localUp;},1
prevGPos),1
m_attributes.LobbyPanel.SetActive(true);,1
SaveShipData(),1
Mission.Failure,1
_attackGroupSpawn,1
);,1
((_maxWaitTimeStation,1
very,1
_attr.active,1
\lobby"\);\,1
//BuildStation(new,1
contents,1
\name="\colTo"\></param>\,1
_util.DraggedObj.transform.position)),1
purpose,1
\name="\trans"\></param>\,1
_requirements[mat],1
loaded,1
divider,1
execution,1
StationController,1
FriendlySpawner.ShipGen,1
RockDestroyed(SegmentObject,1
\GameObject.FindGameObjectsWithTag("\TeamSpawner"\);\,1
(!m_att.Team.PlayerOnTeam(localInstID)),1
\"\Gold"\\,1
GameManager.GetPlayer.AddMaterial(ReturnAmt);,1
fit,1
chosen,1
\(0.796f,\,1
if(CType,1
operlapping,1
raiders,1
recurring,1
ClientScene.FindLocalObject(nID);,1
if(Requirements[mat],1
PopupType,1
Single,1
547,1
testing,1
sheild,1
proceed,1
\name="\radius"\>Radius.</param>\,1
objectv,1
desstroyed,1
retrives,1
Dragged,1
OnlineState.Popup:,1
PlaceComponentGO(newShip.Head);,1
data.Factions),1
raycast,1
entered,1
Vicinity,1
ANYMORE,1
700f,1
ShipAttributes,1
NetworkInstance,1
PatrolGroup();,1
populate,1
\Vector2.Distance(homeStation,\,1
\(GameObject.FindGameObjectWithTag("\PlayerShip"\)\,1
floats,1
spawn),1
white,1
centered,1
GameManager.GetPlayer.XP);,1
newShip.gameObject.AddComponent<SimpleFriendlyCargoController>();,1
STATION,1
component.Tick();,1
s,1
\20,\,1
currentState,1
args[0];,1
if(SecondaryTracker.Contains(mission)),1
\obj.Create(50,\,1
inputs,1
item.GetComponent<ShipItemPrefab>();,1
AIAgent,1
_ship.Ship.CombatResponsive;,1
param.Contract.CType;,1
e.Objectives();,1
further,1
baack,1
number),1
Hovering,1
enitity,1
(!ContractLibrary.ContractExists()),1
\name="\NextFade"\></param>\,1
if(GameManager.GetPlayer.Ship.IconTex,1
\"\(AppId_t)480"\\,1
AttritionMission,1
object.</param>,1
caller,1
interactivity,1
CALL,1
Valve,1
Count,1
Tracker,1
StoredComps;,1
tailing,1
CreateInstance(faction.FactionClass),1
\shipItem.SetShipItem(ship,\,1
arsenal,1
OnlineState.Idle;,1
video,1
COPY,1
interacts,1
implement,1
if((reward.Materials[mat],1
OpenLobbyListWindowFiltered(FilterInfo,1
(_waitTimePatrol,1
instant,1
_patrolGroupSpawn,1
(m_shipRef.Targeter.Count,1
alone,1
40;,1
Wreckage,1
\StopCoroutine("\DistanceBasedDocking"\);\,1
_tracker;,1
SyncListString();,1
foreach(BaseShipComponent,1
\name="\popDistance"\></param>\,1
\case,\,1
CmdReduceInventory(MaterialData,1
Rewards,1
GameManager.GetPlayer.Completedlevels,1
\Random.Range(.05f,\,1
\name="\"\>.</param>\,1
chooses,1
attack.isLead,1
_factionPatrols;,1
STATES,1
ATTRIBUTES,1
\_ship.Links.Add(socket,\,1
newSpawnPoint.AddComponent<PlayerSpawner>();,1
unresponsive,1
\{1}"\,\,1
\"\Conductive\,1
transform.parent.GetComponent<ShipAttributes>();,1
stock,1
\tempComp.AddSocket(int.Parse(socket.SocketID),\,1
\Color(col.x,\,1
20;,1
_att.ShipsDeleted++;,1
_shipData;,1
_spawn;,1
Contain,1
results,1
Item);,1
\Cargo.Add(mat,\,1
kills,1
AstRef._texturePath,1
e.Reward.Components),1
List<SegmentObject>();,1
GO),1
V,1
WHEN,1
intends,1
alpha,1
bSC.ShipComponent.Folder,1
DbgView,1
trail,1
\Texture2D(2,\,1
object>,1
GameManager.GetPlayer.Level.ToString();,1
Obj.GetComponent<ComponentListener>().Postion,1
(GameManager.GetPlayer.Ship,1
_att.SegObjs[index]._name,1
Assigned,1
if(!Rewards.Components.Contains(comp)),1
stars,1
construct,1
\"\/"\\,1
_targeterHUD.gameObject.SetActive(false);,1
\name="\client"\>Client.</param>\,1
patGroup,1
\Vector2(5f,\,1
SpawnerBehaviour,1
exceptions,1
Restore,1
CheckTeamStorage(MaterialData,1
_att.ComponentList,1
\name="\collider"\>Collider.</param>\,1
target),1
Perform,1
\if(CombUtil.EnemyIsVisible(_dest,\,1
Rewards.Components.Add(comp);,1
preseving,1
newStation.transform);,1
All,1
_util.UpdateUI();,1
G.</returns>,1
if(_requirements.ContainsKey(mat)),1
dedication,1
overlap:,1
Generated,1
PATROL,1
follows,1
_ast.Remove(obj);,1
circle.</returns>,1
ContractStatus;,1
EnemySpawnManager.AddShip(newShip);,1
INTERACTION,1
\time"\,\,1
[mat]),1
ShipBoundsPanel;,1
for(int,1
m_list.Add(newItem);,1
m.Reward.Materials.Keys),1
GM,1
(enemies.Count,1
\station.Position.x-25f,\,1
abstract,1
regions,1
(ShipStatus.EvacNeeded(npc)),1
ShipContainer,1
opening,1
(FactionData,1
Activate,1
inviting,1
\name="\inNetID"\></param>\,1
aData.Type,1
\distance,\,1
engine,1
[0])),1
utiilty,1
(_att.FriendlySpawn,1
typeof(Sprite)),1
onwards,1
delay.</returns>,1
Builder;,1
ContractType,1
List<AttackGroup>();,1
\"\Completed"\\,1
Shifts,1
upper,1
think,1
\newFaction.Initialize(data,\,1
boundies,1
Reimbursed.Keys),1
StoreRewards(),1
PrimaryMissions;,1
Builder.GenerateContractObjects(Contract);,1
_att.Controller.SaveShipData();,1
ship;,1
doesn´t,1
deactivated,1
\name="\Comps"\></param>\,1
name;,1
x==_ship.Ship);,1
DeleteShip(),1
\"\\nMaterials:\n"\;\,1
Bs,1
typically,1
\_tex.SaveIcon(_ship.Components,\,1
(Contract,1
contract.Contract.OptionalMissions),1
att.lobbylist,1
Request,1
Changed;,1
Saftey,1
2);,1
1500;,1
INFO,1
Type:,1
OR,1
\"\"\);\,1
_att.MapSize.x),1
\string[1]{"\UANNode"\});\,1
quaility,1
GenerateContract(contract);,1
postion,1
rules,1
Marker,1
timer),1
issues,1
That,1
if(!itemExists),1
OWN,1
classes,1
ContractState.Failed;,1
_att.Contract.ContractStatus,1
itemObj.transform.SetParent(_att.ItemPanel.transform);,1
Managers,1
Mission.Success,1
\name="\hitD"\></param>\,1
ContractList.transform),1
unloading,1
Error,1
SteamAPI_RestartAppIfNecessary,1
if(mission.Reward.Components,1
turn,1
\station.SetAttributes("\New\,1
if(_util.DraggedObj,1
shutting,1
launching,1
attempts,1
\"\Starting\,1
ever,1
m_attributes.FilterPanel.SetActive(false);,1
path;,1
-10,1
information:,1
reincurr,1
typeof(GameObject)),1
ASSIGNMENT,1
Stop();,1
PlaceComponentGO(Data.Shared.Component,1
15f;,1
if(!bIOFailure,1
Rewards.Materials[key],1
config,1
(won),1
SocketAttributes.SocketState.CLOSED),1
newList.Add,1
managers,1
equal,1
acts,1
part,1
Player_Data,1
newTex.LoadImage(fileData);,1
(_att.EnemySpawn,1
//m_viewer.ViewLobby(m_Lobby);,1
UIState,1
prompts,1
item;,1
SHipData,1
\name="\Vel"\></param>\,1
calc,1
creating,1
_renderer;,1
LocalUp,1
WaitForSeconds(SpawnDelay);,1
delays,1
dissapear,1
unconnected,1
\name="\mag"\>Mag.</param>\,1
aData,1
retrived,1
RewardInfo,1
ourselves,1
heartBeatTimer;,1
playerShip.transform.position;,1
Does,1
SocketAttributes.Alignment.DOWN),1
fusion,1
\currently,\,1
newFaction,1
Implimentation,1
temp.CombatResponsive,1
WRITE,1
SelectLobby,1
mission;,1
yesnoframe,1
_newShip.gameObject.AddComponent<SimpleGuardController>();,1
gentle,1
station.Type,1
namespace,1
150f));,1
ContractLibrary.ReturnContractList()),1
SetShip(int,1
preload,1
ReturnAmt,1
waits,1
IntegrityHUD,1
\"\new\,1
correspond,1
\pState.AddTransition(Transition.GoAround,\,1
common,1
_att.SegObjs[index]._position.ToString(),1
patrol.follow,1
raised,1
accurate,1
STATE,1
goal,1
\name="\sockets"\>Sockets\,1
RewardInfo();,1
sockets.</param>,1
_att.Controller.BuildComponent(component);,1
INTERNAL,1
!_util.IsDragging),1
[1])),1
\Time.timeSinceLevelLoad},\,1
rects,1
DateTime.Now.Millisecond;,1
applying,1
INCL,1
(GameManager.GetPlayer.ShipList,1
positive,1
_util;,1
(value),1
MANAGEMENT,1
\contract,\,1
_maxPatrolCount;,1
InitializeSpawner(ShipGenerator,1
90f),1
ship.</param>,1
zone,1
slightly,1
newState);,1
30f;,1
(target,1
AstGen;,1
Count(),1
reasons,1
WarpHUD,1
OBJECTS,1
examples,1
home);,1
decrease,1
RetrieveStations(),1
\"\Pending"\;\,1
\name="\goalColor"\></param>\,1
\spawns.Add(BuildSpawn("\playerSpawnFollow"\,\,1
caused,1
OnSelectLobby;,1
ours,1
(angleDiff,1
